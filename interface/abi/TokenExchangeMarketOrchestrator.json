{
  "contractName": "TokenExchangeMarketOrchestrator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "core",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rbt",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "elf",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "envoy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "partner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "node",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "detonate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"detonate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"core\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rbt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"elf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"envoy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"partner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"node\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/orchestrator/TokenExchangeMarketOrchestrator.sol\":\"TokenExchangeMarketOrchestrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/RainbowBank/market721/TokenExchangeMarket.sol\":{\"keccak256\":\"0x69ccf54942ef9e0111cf720e882115e974bec443db877ff62c2d796760bd0c42\",\"urls\":[\"bzz-raw://45cc5f395b70e405a0826f4a4062288a98f1348117c7b2d9220565ecdc4c1046\",\"dweb:/ipfs/QmVontGjCzmyBXjNZdNxqCw73wadhUwxoZs1kLiAamTCgp\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/core/ICore.sol\":{\"keccak256\":\"0xc83254799ab5b850f09d18ba887054754b823746b7a2558ac5907cdb3affafb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f24cd4ecddd7d0bdc01389da43a0890b9643d6b62363ddb2dff28bb7f27ef0ef\",\"dweb:/ipfs/Qma4mkr6g4a9icw4FG7egCjpQTevETks2FAVX1eUgPLQXK\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/core/IPermissions.sol\":{\"keccak256\":\"0xdc70a21bd523d5ff650c79e06be706dfbae62f9591dcba23f7b38e36271d7452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1b76c99e6b46451455bdfcd058619804b91e8c750169beb5e5b9df3142cd69\",\"dweb:/ipfs/QmXLUZErU6QMyfCUfWJkYCYgmEuaJuSAuzjsDpW5PvWA28\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/ref/ICoreRef.sol\":{\"keccak256\":\"0x8cca5fede06bd9da6ec8af3cf86e122a9ac6d6f65aca1c261388eefb28eac7ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6239adc19b28d86cee0f961cd54e62c7c2914cc860ca11959e012341f274fdc\",\"dweb:/ipfs/QmUApXDaTWA3e7SdHpQNG9gsYik5jC5XJuCA5XcbqW9osF\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/token721/IERC721Receiver.sol\":{\"keccak256\":\"0x0001512a761b526600cb85a78f51e114a87910d3109071a6470a80982e22b1ac\",\"urls\":[\"bzz-raw://dab9763ce907d1e032346836773887813c420ffa6074daacc3e525b7751fe46e\",\"dweb:/ipfs/QmcrcZnwwfYPLzdW76Z6a6DgjwctBAYKq2xAgtcMyiyqdg\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/token721/IGovernance721.sol\":{\"keccak256\":\"0x8295ec48bcfc7dc49072419932cfc11bf91195aac2afdc4291c1f7e9bc4f2e4f\",\"urls\":[\"bzz-raw://62e50791c4cfc394e585a0702819e8aeb72c1727b7f8511ae4fea4b6d6d83ab7\",\"dweb:/ipfs/QmXeWg2fnheaqEgQh6i67YRYXgtySKUusk2mRqojqHL2Kh\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/token721/IRbtDeposit721.sol\":{\"keccak256\":\"0x9ff5c0c4d6d04663d6c358096e1add17ecea9c93270f130883b938642bd2feb2\",\"urls\":[\"bzz-raw://9f17b847b9c8d271e94b7112b03c48137500a8601ede643f1e85db09e8d1b520\",\"dweb:/ipfs/QmSEB63JKkLBuLsTdqSm5Vu43s5H92o6sxF4DsHCyuhefz\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/lib/TokenSet.sol\":{\"keccak256\":\"0x9904ca3fb0fe030215cc549fcebd98a164b014b3b3ae1f5b75ea6efadab03671\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8ce68e1e252fbc6c02866d4ed5cef8f6f741bd11868dac4a781860c657bffb1c\",\"dweb:/ipfs/QmSbEZQdePg5dh7y9u2tJKBZb9fe8ogWGjCiNx8h3ra35x\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/lib/TransferHelper.sol\":{\"keccak256\":\"0xcec5a0301ee08388f23d2914d237aa52a941741bfdbbeb31562af0dfdf1f9ff0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://449fd0dbbed0d1c50877fd6be68d34084baddbbb2b118c7a978402087fdab3ea\",\"dweb:/ipfs/QmQt3Z1ddfvSPs5oBdJmEgjfWFfdDfFt2YnBCqooeLR3B2\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/orchestrator/TokenExchangeMarketOrchestrator.sol\":{\"keccak256\":\"0x1035c5ff6242cf25c9a3ee66eeae8dde1c6bbfa4029944beb7d7e4236c8787d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baec6569fe0f691cab53fa6db3bb3ef8e2f10c2f77db4e836505212b43344b0e\",\"dweb:/ipfs/QmY97WEdVWjjDMPuC8ZXwQtpxUUzHCtFTBWYcgqT854rqG\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/ref/CoreRef.sol\":{\"keccak256\":\"0x0d00fa9fbb38b193ee70dd220b2c9cbb4cf25e76ae03f02da78e08e8066d8ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e54249a5cf4095e2b8278b550c252bf210031b1bfd35cfb2aa69955e3a0731f\",\"dweb:/ipfs/QmNiZojGxQKNwS3146A8QPosxLAN6oZJr7Z2nMdkfHAE8h\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/token721/Governance721.sol\":{\"keccak256\":\"0x9ef5491bba381c1a284471d7dba7637ae78dd832aecc826ccca269e320e6a963\",\"urls\":[\"bzz-raw://f4bf5f7a36a06a9feaf2a2181ccf666dd1b9d40fb92b46206ece8db46c0b6cad\",\"dweb:/ipfs/QmW4jW3YWwS3MVtGy7BjeGUCDz8NCQAAvafPujVoaGcPr5\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611650806100896000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806399e133f91161005b57806399e133f9146100b2578063b09614d6146100c5578063f2fde38b146100cd578063f5ff5c76146100e05761007d565b8063636f615914610082578063715018a6146100a05780638da5cb5b146100aa575b600080fd5b61008a6100e8565b604051610097919061043c565b60405180910390f35b6100a86100f7565b005b61008a61014b565b6100a86100c03660046103c9565b61015a565b6100a8610259565b6100a86100db3660046103a8565b6102ab565b61008a61031c565b6001546001600160a01b031681565b6100ff61032b565b6001600160a01b031661011061014b565b6001600160a01b03161461013f5760405162461bcd60e51b8152600401610136906104d0565b60405180910390fd5b610149600061032f565b565b6000546001600160a01b031690565b61016261032b565b6001600160a01b031661017361014b565b6001600160a01b0316146101995760405162461bcd60e51b8152600401610136906104d0565b856040516101a69061037f565b6101b0919061043c565b604051809103906000f0801580156101cc573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392831617908190556002546040516399e133f960e01b8152918316926399e133f99261021f929091169089908990899089908990600401610450565b600060405180830381600087803b15801561023957600080fd5b505af115801561024d573d6000803e3d6000fd5b50505050505050505050565b61026161032b565b6001600160a01b031661027261014b565b6001600160a01b0316146102985760405162461bcd60e51b8152600401610136906104d0565b6102a061014b565b6001600160a01b0316ff5b6102b361032b565b6001600160a01b03166102c461014b565b6001600160a01b0316146102ea5760405162461bcd60e51b8152600401610136906104d0565b6001600160a01b0381166103105760405162461bcd60e51b81526004016101369061048a565b6103198161032f565b50565b6002546001600160a01b031681565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111158061050683390190565b80356001600160a01b03811681146103a357600080fd5b919050565b6000602082840312156103b9578081fd5b6103c28261038c565b9392505050565b60008060008060008060c087890312156103e1578182fd5b6103ea8761038c565b95506103f86020880161038c565b94506104066040880161038c565b93506104146060880161038c565b92506104226080880161038c565b915061043060a0880161038c565b90509295509295509295565b6001600160a01b0391909116815260200190565b6001600160a01b0396871681529486166020860152928516604085015290841660608401528316608083015290911660a082015260c00190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe608060405234801561001057600080fd5b5060405161111538038061111583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b611084806100916000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806399e133f91161005b57806399e133f9146100f8578063ce22958b1461010b578063f2f4eb261461011e578063f8fb7c721461012657610088565b8063135b54dd1461008d57806380009630146100ab57806380c9419e146100c0578063814d79d9146100e5575b600080fd5b610095610139565b6040516100a29190610dd1565b60405180910390f35b6100be6100b9366004610c10565b6101c5565b005b6100d36100ce366004610d39565b6102b2565b6040516100a296959493929190610e34565b6100be6100f3366004610cd0565b610302565b6100be610106366004610c4f565b61055f565b6100be610119366004610cd0565b6105d0565b610095610922565b6100be610134366004610d69565b610931565b60008060009054906101000a90046001600160a01b03166001600160a01b03166318f7d8626040518163ffffffff1660e01b815260040160206040518083038186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190610c33565b905090565b600054604051631c86b03760e31b81526001600160a01b039091169063e43581b8906101f5903390600401610dd1565b60206040518083038186803b15801561020d57600080fd5b505afa158015610221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102459190610d19565b61026a5760405162461bcd60e51b815260040161026190610f06565b60405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117825560405190917fad9400e618eb1344fde53db22397a1b82c765527ecbba3a5c86bcac15090828b91a250565b600181815481106102c257600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b600161030e8185610fdf565b8154811061032c57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160030154821461035c5760405162461bcd60e51b815260040161026190610e67565b6002546103b7906001600160a01b03168560016103798188610fdf565b8154811061039757634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546001600160a01b031685610b20565b60006103e86103c7846005610fc0565b6103d19190610fac565b600254909150610435906001600160a01b031660016103f08188610fdf565b8154811061040e57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546003546001600160a01b03918216911684610b20565b6003546001600160a01b03808416916342842e0e9116876001610458818a610fdf565b8154811061047657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101546040518463ffffffff1660e01b81526004016104a693929190610de5565b600060405180830381600087803b1580156104c057600080fd5b505af11580156104d4573d6000803e3d6000fd5b505050506001806001866104e89190610fdf565b8154811061050657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501819055507f18c4d4bb32998ee713189c2051834cdff7fe95d5667fc12f5f7735b2443e7583858585856040516105509493929190610e09565b60405180910390a15050505050565b600380546001600160a01b03199081166001600160a01b039889161790915560028054909116958716959095179094559184166000908152600460205260408082206107d0905591851681528181206127109055918416825280822061c35090559190921682529020620186a09055565b60006105e164010000000042610ff6565b90506000826001600160a01b031663bf81bf43866040518263ffffffff1660e01b81526004016106119190610f8b565b60206040518083038186803b15801561062957600080fd5b505afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190610d51565b6040516331a9108f60e11b81529091506001600160a01b03841690636352211e90610690908890600401610f8b565b60206040518083038186803b1580156106a857600080fd5b505afa1580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e09190610c33565b6001600160a01b0316866001600160a01b031614801561070657508163ffffffff168110155b6107225760405162461bcd60e51b815260040161026190610ecf565b600180546000916107339190610f94565b6040805160c0810182526001600160a01b038a81168252602082018a8152828401858152606084018b815260808501898152600060a08701818152600180548082018255925287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600690930292830180546001600160a01b03191691891691909117905594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf884015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb909101556003549251632142170760e11b81529394509092878216926342842e0e926108a9928d92909116908c90600401610de5565b600060405180830381600087803b1580156108c357600080fd5b505af11580156108d7573d6000803e3d6000fd5b505050507f1b38ce2719d9be70e0c768bd2a89d778eaef1cd41e3a4c02fa2317d415c3d348888888886040516109109493929190610e09565b60405180910390a15050505050505050565b6000546001600160a01b031690565b600161093d8184610fdf565b8154811061095b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546001600160a01b0316331480156109be5750600161098a8184610fdf565b815481106109a857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501546000145b6109da5760405162461bcd60e51b815260040161026190610e8c565b6003546001600160a01b03808316916342842e0e91163360016109fd8188610fdf565b81548110610a1b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101546040518463ffffffff1660e01b8152600401610a4b93929190610de5565b600060405180830381600087803b158015610a6557600080fd5b505af1158015610a79573d6000803e3d6000fd5b5050505060018083610a8b9190610fdf565b81548110610aa957634e487b7160e01b600052603260045260246000fd5b60009182526020822060069091020180546001600160a01b0319168155600181018290556002810182905560038101829055600481018290556005018190556040516001600160a01b0383169184917f01f63c1b9d3957c18de0c44c6275215a4ad8986480fd414a049af3c3643ec9b39190a35050565b600080856001600160a01b03166323b872dd868686604051602401610b4793929190610de5565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610b809190610d98565b6000604051808303816000865af19150503d8060008114610bbd576040519150601f19603f3d011682016040523d82523d6000602084013e610bc2565b606091505b5091509150818015610bec575080511580610bec575080806020019051810190610bec9190610d19565b610c085760405162461bcd60e51b815260040161026190610f47565b505050505050565b600060208284031215610c21578081fd5b8135610c2c81611036565b9392505050565b600060208284031215610c44578081fd5b8151610c2c81611036565b60008060008060008060c08789031215610c67578182fd5b8635610c7281611036565b95506020870135610c8281611036565b94506040870135610c9281611036565b93506060870135610ca281611036565b92506080870135610cb281611036565b915060a0870135610cc281611036565b809150509295509295509295565b60008060008060808587031215610ce5578384fd5b8435610cf081611036565b935060208501359250604085013591506060850135610d0e81611036565b939692955090935050565b600060208284031215610d2a578081fd5b81518015158114610c2c578182fd5b600060208284031215610d4a578081fd5b5035919050565b600060208284031215610d62578081fd5b5051919050565b60008060408385031215610d7b578182fd5b823591506020830135610d8d81611036565b809150509250929050565b60008251815b81811015610db85760208186018101518583015201610d9e565b81811115610dc65782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b6001600160a01b03969096168652602086019490945260408501929092526060840152608083015260a082015260c00190565b6020808252600b908201526a43616e206e6f742062757960a81b604082015260600190565b60208082526023908201527f5468652063757272656e74207573657220686173206e6f207065726d697373696040820152626f6e7360e81b606082015260800190565b60208082526019908201527f54686520616464726573732063616e6e6f742062652073657400000000000000604082015260600190565b60208082526021908201527f436f72655265663a2043616c6c6572206973206e6f74206120676f7665726e6f6040820152603960f91b606082015260800190565b60208082526024908201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416040820152631253115160e21b606082015260800190565b90815260200190565b60008219821115610fa757610fa761100a565b500190565b600082610fbb57610fbb611020565b500490565b6000816000190483118215151615610fda57610fda61100a565b500290565b600082821015610ff157610ff161100a565b500390565b60008261100557611005611020565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461104b57600080fd5b5056fea26469706673582212205d0c8c9294d37910f0a6b8a055fd06c5c2e1b729a9b61404905b5452deca9f4864736f6c63430008000033a2646970667358221220b0e2bbd74f6bf6c7bb92cf540252725bea6b4e8319ec527108c097da534eb3ed64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806399e133f91161005b57806399e133f9146100b2578063b09614d6146100c5578063f2fde38b146100cd578063f5ff5c76146100e05761007d565b8063636f615914610082578063715018a6146100a05780638da5cb5b146100aa575b600080fd5b61008a6100e8565b604051610097919061043c565b60405180910390f35b6100a86100f7565b005b61008a61014b565b6100a86100c03660046103c9565b61015a565b6100a8610259565b6100a86100db3660046103a8565b6102ab565b61008a61031c565b6001546001600160a01b031681565b6100ff61032b565b6001600160a01b031661011061014b565b6001600160a01b03161461013f5760405162461bcd60e51b8152600401610136906104d0565b60405180910390fd5b610149600061032f565b565b6000546001600160a01b031690565b61016261032b565b6001600160a01b031661017361014b565b6001600160a01b0316146101995760405162461bcd60e51b8152600401610136906104d0565b856040516101a69061037f565b6101b0919061043c565b604051809103906000f0801580156101cc573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392831617908190556002546040516399e133f960e01b8152918316926399e133f99261021f929091169089908990899089908990600401610450565b600060405180830381600087803b15801561023957600080fd5b505af115801561024d573d6000803e3d6000fd5b50505050505050505050565b61026161032b565b6001600160a01b031661027261014b565b6001600160a01b0316146102985760405162461bcd60e51b8152600401610136906104d0565b6102a061014b565b6001600160a01b0316ff5b6102b361032b565b6001600160a01b03166102c461014b565b6001600160a01b0316146102ea5760405162461bcd60e51b8152600401610136906104d0565b6001600160a01b0381166103105760405162461bcd60e51b81526004016101369061048a565b6103198161032f565b50565b6002546001600160a01b031681565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111158061050683390190565b80356001600160a01b03811681146103a357600080fd5b919050565b6000602082840312156103b9578081fd5b6103c28261038c565b9392505050565b60008060008060008060c087890312156103e1578182fd5b6103ea8761038c565b95506103f86020880161038c565b94506104066040880161038c565b93506104146060880161038c565b92506104226080880161038c565b915061043060a0880161038c565b90509295509295509295565b6001600160a01b0391909116815260200190565b6001600160a01b0396871681529486166020860152928516604085015290841660608401528316608083015290911660a082015260c00190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe608060405234801561001057600080fd5b5060405161111538038061111583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b611084806100916000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806399e133f91161005b57806399e133f9146100f8578063ce22958b1461010b578063f2f4eb261461011e578063f8fb7c721461012657610088565b8063135b54dd1461008d57806380009630146100ab57806380c9419e146100c0578063814d79d9146100e5575b600080fd5b610095610139565b6040516100a29190610dd1565b60405180910390f35b6100be6100b9366004610c10565b6101c5565b005b6100d36100ce366004610d39565b6102b2565b6040516100a296959493929190610e34565b6100be6100f3366004610cd0565b610302565b6100be610106366004610c4f565b61055f565b6100be610119366004610cd0565b6105d0565b610095610922565b6100be610134366004610d69565b610931565b60008060009054906101000a90046001600160a01b03166001600160a01b03166318f7d8626040518163ffffffff1660e01b815260040160206040518083038186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190610c33565b905090565b600054604051631c86b03760e31b81526001600160a01b039091169063e43581b8906101f5903390600401610dd1565b60206040518083038186803b15801561020d57600080fd5b505afa158015610221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102459190610d19565b61026a5760405162461bcd60e51b815260040161026190610f06565b60405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117825560405190917fad9400e618eb1344fde53db22397a1b82c765527ecbba3a5c86bcac15090828b91a250565b600181815481106102c257600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b600161030e8185610fdf565b8154811061032c57634e487b7160e01b600052603260045260246000fd5b906000526020600020906006020160030154821461035c5760405162461bcd60e51b815260040161026190610e67565b6002546103b7906001600160a01b03168560016103798188610fdf565b8154811061039757634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546001600160a01b031685610b20565b60006103e86103c7846005610fc0565b6103d19190610fac565b600254909150610435906001600160a01b031660016103f08188610fdf565b8154811061040e57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546003546001600160a01b03918216911684610b20565b6003546001600160a01b03808416916342842e0e9116876001610458818a610fdf565b8154811061047657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101546040518463ffffffff1660e01b81526004016104a693929190610de5565b600060405180830381600087803b1580156104c057600080fd5b505af11580156104d4573d6000803e3d6000fd5b505050506001806001866104e89190610fdf565b8154811061050657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501819055507f18c4d4bb32998ee713189c2051834cdff7fe95d5667fc12f5f7735b2443e7583858585856040516105509493929190610e09565b60405180910390a15050505050565b600380546001600160a01b03199081166001600160a01b039889161790915560028054909116958716959095179094559184166000908152600460205260408082206107d0905591851681528181206127109055918416825280822061c35090559190921682529020620186a09055565b60006105e164010000000042610ff6565b90506000826001600160a01b031663bf81bf43866040518263ffffffff1660e01b81526004016106119190610f8b565b60206040518083038186803b15801561062957600080fd5b505afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190610d51565b6040516331a9108f60e11b81529091506001600160a01b03841690636352211e90610690908890600401610f8b565b60206040518083038186803b1580156106a857600080fd5b505afa1580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e09190610c33565b6001600160a01b0316866001600160a01b031614801561070657508163ffffffff168110155b6107225760405162461bcd60e51b815260040161026190610ecf565b600180546000916107339190610f94565b6040805160c0810182526001600160a01b038a81168252602082018a8152828401858152606084018b815260808501898152600060a08701818152600180548082018255925287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600690930292830180546001600160a01b03191691891691909117905594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf884015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb909101556003549251632142170760e11b81529394509092878216926342842e0e926108a9928d92909116908c90600401610de5565b600060405180830381600087803b1580156108c357600080fd5b505af11580156108d7573d6000803e3d6000fd5b505050507f1b38ce2719d9be70e0c768bd2a89d778eaef1cd41e3a4c02fa2317d415c3d348888888886040516109109493929190610e09565b60405180910390a15050505050505050565b6000546001600160a01b031690565b600161093d8184610fdf565b8154811061095b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546001600160a01b0316331480156109be5750600161098a8184610fdf565b815481106109a857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501546000145b6109da5760405162461bcd60e51b815260040161026190610e8c565b6003546001600160a01b03808316916342842e0e91163360016109fd8188610fdf565b81548110610a1b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101546040518463ffffffff1660e01b8152600401610a4b93929190610de5565b600060405180830381600087803b158015610a6557600080fd5b505af1158015610a79573d6000803e3d6000fd5b5050505060018083610a8b9190610fdf565b81548110610aa957634e487b7160e01b600052603260045260246000fd5b60009182526020822060069091020180546001600160a01b0319168155600181018290556002810182905560038101829055600481018290556005018190556040516001600160a01b0383169184917f01f63c1b9d3957c18de0c44c6275215a4ad8986480fd414a049af3c3643ec9b39190a35050565b600080856001600160a01b03166323b872dd868686604051602401610b4793929190610de5565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610b809190610d98565b6000604051808303816000865af19150503d8060008114610bbd576040519150601f19603f3d011682016040523d82523d6000602084013e610bc2565b606091505b5091509150818015610bec575080511580610bec575080806020019051810190610bec9190610d19565b610c085760405162461bcd60e51b815260040161026190610f47565b505050505050565b600060208284031215610c21578081fd5b8135610c2c81611036565b9392505050565b600060208284031215610c44578081fd5b8151610c2c81611036565b60008060008060008060c08789031215610c67578182fd5b8635610c7281611036565b95506020870135610c8281611036565b94506040870135610c9281611036565b93506060870135610ca281611036565b92506080870135610cb281611036565b915060a0870135610cc281611036565b809150509295509295509295565b60008060008060808587031215610ce5578384fd5b8435610cf081611036565b935060208501359250604085013591506060850135610d0e81611036565b939692955090935050565b600060208284031215610d2a578081fd5b81518015158114610c2c578182fd5b600060208284031215610d4a578081fd5b5035919050565b600060208284031215610d62578081fd5b5051919050565b60008060408385031215610d7b578182fd5b823591506020830135610d8d81611036565b809150509250929050565b60008251815b81811015610db85760208186018101518583015201610d9e565b81811115610dc65782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03948516815260208101939093526040830191909152909116606082015260800190565b6001600160a01b03969096168652602086019490945260408501929092526060840152608083015260a082015260c00190565b6020808252600b908201526a43616e206e6f742062757960a81b604082015260600190565b60208082526023908201527f5468652063757272656e74207573657220686173206e6f207065726d697373696040820152626f6e7360e81b606082015260800190565b60208082526019908201527f54686520616464726573732063616e6e6f742062652073657400000000000000604082015260600190565b60208082526021908201527f436f72655265663a2043616c6c6572206973206e6f74206120676f7665726e6f6040820152603960f91b606082015260800190565b60208082526024908201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416040820152631253115160e21b606082015260800190565b90815260200190565b60008219821115610fa757610fa761100a565b500190565b600082610fbb57610fbb611020565b500490565b6000816000190483118215151615610fda57610fda61100a565b500290565b600082821015610ff157610ff161100a565b500390565b60008261100557611005611020565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461104b57600080fd5b5056fea26469706673582212205d0c8c9294d37910f0a6b8a055fd06c5c2e1b729a9b61404905b5452deca9f4864736f6c63430008000033a2646970667358221220b0e2bbd74f6bf6c7bb92cf540252725bea6b4e8319ec527108c097da534eb3ed64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2588:132",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:132",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:132"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:132"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:132"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:132"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:132",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:132",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:132"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:132"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:132",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:132"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:132"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:132"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:132"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:132"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:132"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:132"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:132",
                "type": ""
              }
            ],
            "src": "14:175:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:132"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:132"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:132"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:132",
                "type": ""
              }
            ],
            "src": "194:198:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "552:426:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "599:26:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "608:6:132"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "616:6:132"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "601:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "601:22:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "601:22:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "573:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "582:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "594:3:132",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "565:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:33:132"
                  },
                  "nodeType": "YulIf",
                  "src": "562:2:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "634:41:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "665:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "644:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:31:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "684:50:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "719:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "730:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "715:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "715:18:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "694:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "694:40:132"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "684:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "743:50:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "778:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "789:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "774:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "774:18:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "753:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "753:40:132"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "802:50:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "837:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "848:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "833:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "833:18:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "812:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:40:132"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "802:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:51:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "896:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "907:3:132",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "892:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "892:19:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:41:132"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "921:51:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "956:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "967:3:132",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "952:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "952:19:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "931:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "931:41:132"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "921:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "478:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "489:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "501:6:132",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "509:6:132",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "517:6:132",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "525:6:132",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "533:6:132",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "541:6:132",
                "type": ""
              }
            ],
            "src": "397:581:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1084:102:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1094:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1106:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1117:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1102:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1094:4:132"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1136:9:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1151:6:132"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1167:3:132",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1172:1:132",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1163:3:132"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1163:11:132"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1176:1:132",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1159:3:132"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1159:19:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1147:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1147:32:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1129:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1129:51:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1129:51:132"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1053:9:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1064:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1075:4:132",
                "type": ""
              }
            ],
            "src": "983:203:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1432:386:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1442:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1454:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:3:132",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1450:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1450:19:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1442:4:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1478:29:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1496:3:132",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1501:1:132",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1492:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1492:11:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1505:1:132",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1488:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1488:19:132"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1482:2:132",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1523:9:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1538:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1546:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1534:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1534:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1516:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1516:34:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1516:34:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1570:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1581:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1566:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1566:18:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1590:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1598:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1586:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1586:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1559:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1559:43:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1559:43:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1622:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1633:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1618:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1618:18:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1642:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1650:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1638:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1638:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1611:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:43:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1611:43:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1674:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1685:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1670:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1670:18:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "1694:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1702:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1690:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1690:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1663:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1663:43:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1663:43:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1726:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1737:3:132",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1722:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1722:19:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "1747:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1755:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1743:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1743:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1715:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1715:44:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1715:44:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1779:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1790:3:132",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1775:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1775:19:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "1800:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1808:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1796:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1796:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1768:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1768:44:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1768:44:132"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1361:9:132",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1372:6:132",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1380:6:132",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1388:6:132",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1396:6:132",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1404:6:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1412:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1423:4:132",
                "type": ""
              }
            ],
            "src": "1191:627:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1997:228:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2014:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2025:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2007:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2048:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2059:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2044:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2044:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2064:2:132",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2037:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2037:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2037:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2087:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2098:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2083:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2083:18:132"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2103:34:132",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2076:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2076:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2076:62:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2158:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2169:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2154:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2154:18:132"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2174:8:132",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2147:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:36:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2147:36:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2192:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2204:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2215:3:132",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2200:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2200:19:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2192:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1974:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1988:4:132",
                "type": ""
              }
            ],
            "src": "1823:402:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2404:182:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2421:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2432:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2414:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2414:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2414:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2455:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2466:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2451:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2451:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2471:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2444:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2444:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2444:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2494:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2505:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2490:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2490:18:132"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2510:34:132",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2483:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2483:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2483:62:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2554:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2566:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2577:2:132",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2562:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2554:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2381:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2395:4:132",
                "type": ""
              }
            ],
            "src": "2230:356:132"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n        value3 := abi_decode_t_address(add(headStart, 96))\n        value4 := abi_decode_t_address(add(headStart, 128))\n        value5 := abi_decode_t_address(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 132,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "209:487:92:-:0;;;;;;;;;;;;-1:-1:-1;867:23:119;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;209:487:92;;587:96:125;666:10;587:96;:::o;2041:169:119:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:119;;;-1:-1:-1;;;;;;2131:17:119;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;209:487:92:-;;;;;;;",
  "deployedSourceMap": "209:487:92:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:119;;;:::i;:::-;;973:85;;;:::i;330:266:92:-;;;;;;:::i;:::-;;:::i;602:85::-;;;:::i;1846:189:119:-;;;;;;:::i;:::-;;:::i;303:20:92:-;;;:::i;268:28::-;;;-1:-1:-1;;;;;268:28:92;;:::o;1605:92:119:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:119;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:119;;1177:68;;;;-1:-1:-1;;;1177:68:119;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:119;973:85;:::o;330:266:92:-;1196:12:119;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:119;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:119;;1177:68;;;;-1:-1:-1;;;1177:68:119;;;;;;;:::i;:::-;500:4:92::1;476:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;454:13:92::1;:52:::0;;-1:-1:-1;;;;;;454:52:92::1;-1:-1:-1::0;;;;;454:52:92;;::::1;;::::0;;;;555:5:::1;::::0;515:73:::1;::::0;-1:-1:-1;;;515:73:92;;535:13;;::::1;::::0;515:39:::1;::::0;:73:::1;::::0;555:5;;::::1;::::0;561:3;;565;;569:5;;575:7;;583:4;;515:73:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;330:266:::0;;;;;;:::o;602:85::-;1196:12:119;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:119;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:119;;1177:68;;;;-1:-1:-1;;;1177:68:119;;;;;;;:::i;:::-;670:7:92::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;649:30:92::1;;1846:189:119::0;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:119;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:119;;1177:68;;;;-1:-1:-1;;;1177:68:119;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:119;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:119::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;303:20:92:-;;;-1:-1:-1;;;;;303:20:92;;:::o;587:96:125:-;666:10;587:96;:::o;2041:169:119:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:119;;;-1:-1:-1;;;;;;2131:17:119;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:175:132:-;84:20;;-1:-1:-1;;;;;133:31:132;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:132:o;397:581::-;;;;;;;594:3;582:9;573:7;569:23;565:33;562:2;;;616:6;608;601:22;562:2;644:31;665:9;644:31;:::i;:::-;634:41;;694:40;730:2;719:9;715:18;694:40;:::i;:::-;684:50;;753:40;789:2;778:9;774:18;753:40;:::i;:::-;743:50;;812:40;848:2;837:9;833:18;812:40;:::i;:::-;802:50;;871:41;907:3;896:9;892:19;871:41;:::i;:::-;861:51;;931:41;967:3;956:9;952:19;931:41;:::i;:::-;921:51;;552:426;;;;;;;;:::o;983:203::-;-1:-1:-1;;;;;1147:32:132;;;;1129:51;;1117:2;1102:18;;1084:102::o;1191:627::-;-1:-1:-1;;;;;1534:15:132;;;1516:34;;1586:15;;;1581:2;1566:18;;1559:43;1638:15;;;1633:2;1618:18;;1611:43;1690:15;;;1685:2;1670:18;;1663:43;1743:15;;1737:3;1722:19;;1715:44;1796:15;;;1496:3;1775:19;;1768:44;1465:3;1450:19;;1432:386::o;1823:402::-;2025:2;2007:21;;;2064:2;2044:18;;;2037:30;2103:34;2098:2;2083:18;;2076:62;-1:-1:-1;;;2169:2:132;2154:18;;2147:36;2215:3;2200:19;;1997:228::o;2230:356::-;2432:2;2414:21;;;2451:18;;;2444:30;2510:34;2505:2;2490:18;;2483:62;2577:2;2562:18;;2404:182::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\npragma experimental ABIEncoderV2;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../RainbowBank/market721/TokenExchangeMarket.sol\";\r\n\r\ncontract TokenExchangeMarketOrchestrator is  Ownable{\r\n    address public tokenExchange;\r\n    address public agent;\r\n    function init(address core,address rbt,address elf ,address envoy,address  partner,address  node) public  onlyOwner{\r\n      tokenExchange=address(new TokenExchangeMarket(core));\r\n      TokenExchangeMarket(tokenExchange).init(agent,rbt,elf,envoy,partner,node);\r\n    }\r\n    function detonate() public  onlyOwner {\r\n      selfdestruct(payable(owner()));\r\n    }\r\n    \r\n}",
  "sourcePath": "D:/公司项目/rainbow/RainbowDao-protocol/contracts/orchestrator/TokenExchangeMarketOrchestrator.sol",
  "ast": {
    "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/orchestrator/TokenExchangeMarketOrchestrator.sol",
    "exportedSymbols": {
      "Address": [
        30071
      ],
      "Context": [
        30093
      ],
      "CoreRef": [
        22381
      ],
      "Governance721": [
        27123
      ],
      "ICore": [
        13618
      ],
      "ICoreRef": [
        14189
      ],
      "IERC20": [
        29749
      ],
      "IERC721Receiver": [
        14295
      ],
      "IGovernance721": [
        14435
      ],
      "IPermissions": [
        13687
      ],
      "IRbtDeposit721": [
        14712
      ],
      "Ownable": [
        29079
      ],
      "Set": [
        15973
      ],
      "TokenExchangeMarket": [
        1408
      ],
      "TokenExchangeMarketOrchestrator": [
        19667
      ],
      "TransferHelper": [
        16133
      ]
    },
    "id": 19668,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19602,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:92"
      },
      {
        "id": 19603,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:92"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 19604,
        "nodeType": "ImportDirective",
        "scope": 19668,
        "sourceUnit": 29080,
        "src": "93:52:92",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/RainbowBank/market721/TokenExchangeMarket.sol",
        "file": "../RainbowBank/market721/TokenExchangeMarket.sol",
        "id": 19605,
        "nodeType": "ImportDirective",
        "scope": 19668,
        "sourceUnit": 1409,
        "src": "147:58:92",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19606,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29079,
              "src": "254:7:92"
            },
            "id": 19607,
            "nodeType": "InheritanceSpecifier",
            "src": "254:7:92"
          }
        ],
        "contractDependencies": [
          1408,
          29079,
          30093
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19667,
        "linearizedBaseContracts": [
          19667,
          29079,
          30093
        ],
        "name": "TokenExchangeMarketOrchestrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "636f6159",
            "id": 19609,
            "mutability": "mutable",
            "name": "tokenExchange",
            "nodeType": "VariableDeclaration",
            "scope": 19667,
            "src": "268:28:92",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19608,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "268:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5ff5c76",
            "id": 19611,
            "mutability": "mutable",
            "name": "agent",
            "nodeType": "VariableDeclaration",
            "scope": 19667,
            "src": "303:20:92",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19610,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 19651,
              "nodeType": "Block",
              "src": "445:151:92",
              "statements": [
                {
                  "expression": {
                    "id": 19637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19628,
                      "name": "tokenExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19609,
                      "src": "454:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 19634,
                              "name": "core",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19613,
                              "src": "500:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 19633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "476:23:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TokenExchangeMarket_$1408_$",
                              "typeString": "function (address) returns (contract TokenExchangeMarket)"
                            },
                            "typeName": {
                              "id": 19632,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 19631,
                                "name": "TokenExchangeMarket",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1408,
                                "src": "480:19:92"
                              },
                              "referencedDeclaration": 1408,
                              "src": "480:19:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenExchangeMarket_$1408",
                                "typeString": "contract TokenExchangeMarket"
                              }
                            }
                          },
                          "id": 19635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "476:29:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenExchangeMarket_$1408",
                            "typeString": "contract TokenExchangeMarket"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenExchangeMarket_$1408",
                            "typeString": "contract TokenExchangeMarket"
                          }
                        ],
                        "id": 19630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "468:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 19629,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "468:7:92",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 19636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "468:38:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "454:52:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19638,
                  "nodeType": "ExpressionStatement",
                  "src": "454:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19643,
                        "name": "agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19611,
                        "src": "555:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19644,
                        "name": "rbt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19615,
                        "src": "561:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19645,
                        "name": "elf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19617,
                        "src": "565:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19646,
                        "name": "envoy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19619,
                        "src": "569:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19647,
                        "name": "partner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19621,
                        "src": "575:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19648,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19623,
                        "src": "583:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 19640,
                            "name": "tokenExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19609,
                            "src": "535:13:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19639,
                          "name": "TokenExchangeMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1408,
                          "src": "515:19:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TokenExchangeMarket_$1408_$",
                            "typeString": "type(contract TokenExchangeMarket)"
                          }
                        },
                        "id": 19641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "515:34:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenExchangeMarket_$1408",
                          "typeString": "contract TokenExchangeMarket"
                        }
                      },
                      "id": 19642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "515:39:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address,address,address) external"
                      }
                    },
                    "id": 19649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:73:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19650,
                  "nodeType": "ExpressionStatement",
                  "src": "515:73:92"
                }
              ]
            },
            "functionSelector": "99e133f9",
            "id": 19652,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19626,
                "modifierName": {
                  "id": 19625,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29022,
                  "src": "436:9:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "436:9:92"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19613,
                  "mutability": "mutable",
                  "name": "core",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "344:12:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19615,
                  "mutability": "mutable",
                  "name": "rbt",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "357:11:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19617,
                  "mutability": "mutable",
                  "name": "elf",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "369:11:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19619,
                  "mutability": "mutable",
                  "name": "envoy",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "382:13:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19621,
                  "mutability": "mutable",
                  "name": "partner",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "396:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19623,
                  "mutability": "mutable",
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "413:13:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "343:84:92"
            },
            "returnParameters": {
              "id": 19627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:92"
            },
            "scope": 19667,
            "src": "330:266:92",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19665,
              "nodeType": "Block",
              "src": "640:47:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19660,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29008,
                              "src": "670:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 19661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "670:7:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "662:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 19658,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "662:8:92",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "662:16:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 19657,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "649:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 19663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19664,
                  "nodeType": "ExpressionStatement",
                  "src": "649:30:92"
                }
              ]
            },
            "functionSelector": "b09614d6",
            "id": 19666,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19655,
                "modifierName": {
                  "id": 19654,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29022,
                  "src": "630:9:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "630:9:92"
              }
            ],
            "name": "detonate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "619:2:92"
            },
            "returnParameters": {
              "id": 19656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:92"
            },
            "scope": 19667,
            "src": "602:85:92",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19668,
        "src": "209:487:92"
      }
    ],
    "src": "33:663:92"
  },
  "legacyAST": {
    "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/orchestrator/TokenExchangeMarketOrchestrator.sol",
    "exportedSymbols": {
      "Address": [
        30071
      ],
      "Context": [
        30093
      ],
      "CoreRef": [
        22381
      ],
      "Governance721": [
        27123
      ],
      "ICore": [
        13618
      ],
      "ICoreRef": [
        14189
      ],
      "IERC20": [
        29749
      ],
      "IERC721Receiver": [
        14295
      ],
      "IGovernance721": [
        14435
      ],
      "IPermissions": [
        13687
      ],
      "IRbtDeposit721": [
        14712
      ],
      "Ownable": [
        29079
      ],
      "Set": [
        15973
      ],
      "TokenExchangeMarket": [
        1408
      ],
      "TokenExchangeMarketOrchestrator": [
        19667
      ],
      "TransferHelper": [
        16133
      ]
    },
    "id": 19668,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19602,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:92"
      },
      {
        "id": 19603,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:92"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 19604,
        "nodeType": "ImportDirective",
        "scope": 19668,
        "sourceUnit": 29080,
        "src": "93:52:92",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/RainbowBank/market721/TokenExchangeMarket.sol",
        "file": "../RainbowBank/market721/TokenExchangeMarket.sol",
        "id": 19605,
        "nodeType": "ImportDirective",
        "scope": 19668,
        "sourceUnit": 1409,
        "src": "147:58:92",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19606,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29079,
              "src": "254:7:92"
            },
            "id": 19607,
            "nodeType": "InheritanceSpecifier",
            "src": "254:7:92"
          }
        ],
        "contractDependencies": [
          1408,
          29079,
          30093
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19667,
        "linearizedBaseContracts": [
          19667,
          29079,
          30093
        ],
        "name": "TokenExchangeMarketOrchestrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "636f6159",
            "id": 19609,
            "mutability": "mutable",
            "name": "tokenExchange",
            "nodeType": "VariableDeclaration",
            "scope": 19667,
            "src": "268:28:92",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19608,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "268:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5ff5c76",
            "id": 19611,
            "mutability": "mutable",
            "name": "agent",
            "nodeType": "VariableDeclaration",
            "scope": 19667,
            "src": "303:20:92",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19610,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 19651,
              "nodeType": "Block",
              "src": "445:151:92",
              "statements": [
                {
                  "expression": {
                    "id": 19637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19628,
                      "name": "tokenExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19609,
                      "src": "454:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 19634,
                              "name": "core",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19613,
                              "src": "500:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 19633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "476:23:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TokenExchangeMarket_$1408_$",
                              "typeString": "function (address) returns (contract TokenExchangeMarket)"
                            },
                            "typeName": {
                              "id": 19632,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 19631,
                                "name": "TokenExchangeMarket",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1408,
                                "src": "480:19:92"
                              },
                              "referencedDeclaration": 1408,
                              "src": "480:19:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenExchangeMarket_$1408",
                                "typeString": "contract TokenExchangeMarket"
                              }
                            }
                          },
                          "id": 19635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "476:29:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenExchangeMarket_$1408",
                            "typeString": "contract TokenExchangeMarket"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenExchangeMarket_$1408",
                            "typeString": "contract TokenExchangeMarket"
                          }
                        ],
                        "id": 19630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "468:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 19629,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "468:7:92",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 19636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "468:38:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "454:52:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19638,
                  "nodeType": "ExpressionStatement",
                  "src": "454:52:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19643,
                        "name": "agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19611,
                        "src": "555:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19644,
                        "name": "rbt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19615,
                        "src": "561:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19645,
                        "name": "elf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19617,
                        "src": "565:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19646,
                        "name": "envoy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19619,
                        "src": "569:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19647,
                        "name": "partner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19621,
                        "src": "575:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19648,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19623,
                        "src": "583:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 19640,
                            "name": "tokenExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19609,
                            "src": "535:13:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19639,
                          "name": "TokenExchangeMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1408,
                          "src": "515:19:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TokenExchangeMarket_$1408_$",
                            "typeString": "type(contract TokenExchangeMarket)"
                          }
                        },
                        "id": 19641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "515:34:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenExchangeMarket_$1408",
                          "typeString": "contract TokenExchangeMarket"
                        }
                      },
                      "id": 19642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1170,
                      "src": "515:39:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address,address,address) external"
                      }
                    },
                    "id": 19649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:73:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19650,
                  "nodeType": "ExpressionStatement",
                  "src": "515:73:92"
                }
              ]
            },
            "functionSelector": "99e133f9",
            "id": 19652,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19626,
                "modifierName": {
                  "id": 19625,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29022,
                  "src": "436:9:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "436:9:92"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19613,
                  "mutability": "mutable",
                  "name": "core",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "344:12:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19615,
                  "mutability": "mutable",
                  "name": "rbt",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "357:11:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19617,
                  "mutability": "mutable",
                  "name": "elf",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "369:11:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19619,
                  "mutability": "mutable",
                  "name": "envoy",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "382:13:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19621,
                  "mutability": "mutable",
                  "name": "partner",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "396:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19623,
                  "mutability": "mutable",
                  "name": "node",
                  "nodeType": "VariableDeclaration",
                  "scope": 19652,
                  "src": "413:13:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "343:84:92"
            },
            "returnParameters": {
              "id": 19627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:92"
            },
            "scope": 19667,
            "src": "330:266:92",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19665,
              "nodeType": "Block",
              "src": "640:47:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19660,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29008,
                              "src": "670:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 19661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "670:7:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "662:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 19658,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "662:8:92",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "662:16:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 19657,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "649:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 19663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "649:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19664,
                  "nodeType": "ExpressionStatement",
                  "src": "649:30:92"
                }
              ]
            },
            "functionSelector": "b09614d6",
            "id": 19666,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19655,
                "modifierName": {
                  "id": 19654,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29022,
                  "src": "630:9:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "630:9:92"
              }
            ],
            "name": "detonate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "619:2:92"
            },
            "returnParameters": {
              "id": 19656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:92"
            },
            "scope": 19667,
            "src": "602:85:92",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19668,
        "src": "209:487:92"
      }
    ],
    "src": "33:663:92"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1234": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x26D1ec478c3A0bD7687489e98f89913bB7af597d",
      "transactionHash": "0x576618e5c4419b072206c7ec6f25fb6f494e2a95bc3bfe1cdf3112355d60b4ee"
    },
    "1634354924792": {
      "events": {},
      "links": {},
      "address": "0x22cC5E1cfb9cF722fD2b2C9c40cb7E1d30b9b039",
      "transactionHash": "0x0c29e18a83ee072110160a2ed7f965f1cf66106d64b6229223dc4cba24e6cc58"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-10-16T03:51:57.540Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}