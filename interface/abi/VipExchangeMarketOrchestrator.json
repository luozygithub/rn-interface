{
  "contractName": "VipExchangeMarketOrchestrator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vipExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "core",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rbt",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vipToken",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "detonate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"detonate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"core\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rbt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vipToken\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vipExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/orchestrator/VipExchangeMarketOrchestrator.sol\":\"VipExchangeMarketOrchestrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/RainbowBank/market721/VipExchangeMarket.sol\":{\"keccak256\":\"0x1c06fc9b867a0788a1bd13af10d4a7f7234e0775175f805b9a1df89211e2aa18\",\"urls\":[\"bzz-raw://780f54098a27383c98cd4c6761dfa1f3a049c4a22ff677675e9d4d8665ff224d\",\"dweb:/ipfs/QmeypSwaRms2Swq3A4meCw2UmmVxemmsDLFcDWt46UMSFb\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/IRbtVip.sol\":{\"keccak256\":\"0xb23e106fc6ed4a5cd22ca1d278fc970f7c68c580f0e77c7a81747c39b890c49d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ca12fa22487b60ec42a3b79f9b0d9b5b8f7657d034f59b812a2f924d2f0818\",\"dweb:/ipfs/QmRK4BVekzAUrGBdNTcuyUPDWRwFidzC3uFSRx3ApyaGn2\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/core/ICore.sol\":{\"keccak256\":\"0xc83254799ab5b850f09d18ba887054754b823746b7a2558ac5907cdb3affafb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f24cd4ecddd7d0bdc01389da43a0890b9643d6b62363ddb2dff28bb7f27ef0ef\",\"dweb:/ipfs/Qma4mkr6g4a9icw4FG7egCjpQTevETks2FAVX1eUgPLQXK\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/core/IPermissions.sol\":{\"keccak256\":\"0xdc70a21bd523d5ff650c79e06be706dfbae62f9591dcba23f7b38e36271d7452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1b76c99e6b46451455bdfcd058619804b91e8c750169beb5e5b9df3142cd69\",\"dweb:/ipfs/QmXLUZErU6QMyfCUfWJkYCYgmEuaJuSAuzjsDpW5PvWA28\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/ref/ICoreRef.sol\":{\"keccak256\":\"0x8cca5fede06bd9da6ec8af3cf86e122a9ac6d6f65aca1c261388eefb28eac7ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6239adc19b28d86cee0f961cd54e62c7c2914cc860ca11959e012341f274fdc\",\"dweb:/ipfs/QmUApXDaTWA3e7SdHpQNG9gsYik5jC5XJuCA5XcbqW9osF\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/token721/IERC721Receiver.sol\":{\"keccak256\":\"0x0001512a761b526600cb85a78f51e114a87910d3109071a6470a80982e22b1ac\",\"urls\":[\"bzz-raw://dab9763ce907d1e032346836773887813c420ffa6074daacc3e525b7751fe46e\",\"dweb:/ipfs/QmcrcZnwwfYPLzdW76Z6a6DgjwctBAYKq2xAgtcMyiyqdg\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/token721/IGovernance721.sol\":{\"keccak256\":\"0x8295ec48bcfc7dc49072419932cfc11bf91195aac2afdc4291c1f7e9bc4f2e4f\",\"urls\":[\"bzz-raw://62e50791c4cfc394e585a0702819e8aeb72c1727b7f8511ae4fea4b6d6d83ab7\",\"dweb:/ipfs/QmXeWg2fnheaqEgQh6i67YRYXgtySKUusk2mRqojqHL2Kh\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/token721/IRbtDeposit721.sol\":{\"keccak256\":\"0x9ff5c0c4d6d04663d6c358096e1add17ecea9c93270f130883b938642bd2feb2\",\"urls\":[\"bzz-raw://9f17b847b9c8d271e94b7112b03c48137500a8601ede643f1e85db09e8d1b520\",\"dweb:/ipfs/QmSEB63JKkLBuLsTdqSm5Vu43s5H92o6sxF4DsHCyuhefz\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/lib/TokenSet.sol\":{\"keccak256\":\"0x9904ca3fb0fe030215cc549fcebd98a164b014b3b3ae1f5b75ea6efadab03671\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8ce68e1e252fbc6c02866d4ed5cef8f6f741bd11868dac4a781860c657bffb1c\",\"dweb:/ipfs/QmSbEZQdePg5dh7y9u2tJKBZb9fe8ogWGjCiNx8h3ra35x\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/lib/TransferHelper.sol\":{\"keccak256\":\"0xcec5a0301ee08388f23d2914d237aa52a941741bfdbbeb31562af0dfdf1f9ff0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://449fd0dbbed0d1c50877fd6be68d34084baddbbb2b118c7a978402087fdab3ea\",\"dweb:/ipfs/QmQt3Z1ddfvSPs5oBdJmEgjfWFfdDfFt2YnBCqooeLR3B2\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/lib/userVipStruct.sol\":{\"keccak256\":\"0xf8ed5f1234338805bb654af80a55349b27832861142f7f48961ea10096df854d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae39182d11315cc73d4dc2c8258a8ab60316e2428dbfe31066e356702d9b1e93\",\"dweb:/ipfs/QmaPnuk5eD4FADSHp68YXcFGPuaxWARBctCvKHm9arsdHX\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/orchestrator/VipExchangeMarketOrchestrator.sol\":{\"keccak256\":\"0xf55fe6e9ae29e39b215685d276588062e097be9f686d5fe80914fb63e2d45760\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb1916751cd2b24cbfb72977aa66acb6d32ca21089a496016a08fd0172889b74\",\"dweb:/ipfs/QmV6bdMme2yHkh82erYkNbZK8Lx3J4RGVaPvtXb2y6mPru\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/ref/CoreRef.sol\":{\"keccak256\":\"0x0d00fa9fbb38b193ee70dd220b2c9cbb4cf25e76ae03f02da78e08e8066d8ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e54249a5cf4095e2b8278b550c252bf210031b1bfd35cfb2aa69955e3a0731f\",\"dweb:/ipfs/QmNiZojGxQKNwS3146A8QPosxLAN6oZJr7Z2nMdkfHAE8h\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/token721/Governance721.sol\":{\"keccak256\":\"0x9ef5491bba381c1a284471d7dba7637ae78dd832aecc826ccca269e320e6a963\",\"urls\":[\"bzz-raw://f4bf5f7a36a06a9feaf2a2181ccf666dd1b9d40fb92b46206ece8db46c0b6cad\",\"dweb:/ipfs/QmW4jW3YWwS3MVtGy7BjeGUCDz8NCQAAvafPujVoaGcPr5\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6115b4806100896000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100bd578063b09614d6146100c5578063f2fde38b146100cd578063f5ff5c76146100e05761007d565b8063184b9559146100825780631b424c2514610097578063715018a6146100b5575b600080fd5b6100956100903660046103c0565b6100e8565b005b61009f6101e7565b6040516100ac9190610402565b60405180910390f35b6100956101f6565b61009f610241565b610095610250565b6100956100db36600461039f565b6102a2565b61009f610313565b6100f0610322565b6001600160a01b0316610101610241565b6001600160a01b0316146101305760405162461bcd60e51b81526004016101279061047f565b60405180910390fd5b8260405161013d90610376565b6101479190610402565b604051809103906000f080158015610163573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03928316179081905560025460405163184b955960e01b81529183169263184b9559926101b0929091169086908690600401610416565b600060405180830381600087803b1580156101ca57600080fd5b505af11580156101de573d6000803e3d6000fd5b50505050505050565b6001546001600160a01b031681565b6101fe610322565b6001600160a01b031661020f610241565b6001600160a01b0316146102355760405162461bcd60e51b81526004016101279061047f565b61023f6000610326565b565b6000546001600160a01b031690565b610258610322565b6001600160a01b0316610269610241565b6001600160a01b03161461028f5760405162461bcd60e51b81526004016101279061047f565b610297610241565b6001600160a01b0316ff5b6102aa610322565b6001600160a01b03166102bb610241565b6001600160a01b0316146102e15760405162461bcd60e51b81526004016101279061047f565b6001600160a01b0381166103075760405162461bcd60e51b815260040161012790610439565b61031081610326565b50565b6002546001600160a01b031681565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6110ca806104b583390190565b80356001600160a01b038116811461039a57600080fd5b919050565b6000602082840312156103b0578081fd5b6103b982610383565b9392505050565b6000806000606084860312156103d4578182fd5b6103dd84610383565b92506103eb60208501610383565b91506103f960408501610383565b90509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe608060405234801561001057600080fd5b506040516110ca3803806110ca83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b611039806100916000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806380c9419e1161005b57806380c9419e146100e6578063926a59141461010b578063f2f4eb261461011e578063f3a469b41461012657610088565b8063135b54dd1461008d578063184b9559146100ab5780633e11741f146100c057806380009630146100d3575b600080fd5b610095610139565b6040516100a29190610d90565b60405180910390f35b6100be6100b9366004610bf8565b6101c5565b005b6100be6100ce366004610c42565b610202565b6100be6100e1366004610bd5565b610560565b6100f96100f4366004610d3f565b610644565b6040516100a296959493929190610de9565b6100be610119366004610d3f565b610694565b610095610879565b6100be610134366004610c42565b610888565b60008060009054906101000a90046001600160a01b03166001600160a01b03166318f7d8626040518163ffffffff1660e01b815260040160206040518083038186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190610c96565b905090565b600280546001600160a01b03199081166001600160a01b039485161790915560038054821694841694909417909355600480549093169116179055565b600061021364010000000042610fab565b60048054604051634d65beb160e01b81529293506000926001600160a01b0390911691634d65beb19161024891889101610f40565b60a06040518083038186803b15801561026057600080fd5b505afa158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190610cb2565b6080015160048054604051634d65beb160e01b81529293506001600160a01b031691634d65beb1916102cc91889101610f40565b60a06040518083038186803b1580156102e457600080fd5b505afa1580156102f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031c9190610cb2565b516001600160a01b03868116911614801561033d57508163ffffffff168110155b6103625760405162461bcd60e51b815260040161035990610e84565b60405180910390fd5b600180546000916103739190610f49565b6040805160c0810182526001600160a01b03898116825260208201898152828401858152606084018a815260808501898152600060a08701818152600180548082018255925287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600690930292830180546001600160a01b03191691891691909117905594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf884015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb90910155600480546003549451632142170760e11b81529596509294928216936342842e0e936104ea938d939216918c9101610da4565b600060405180830381600087803b15801561050457600080fd5b505af1158015610518573d6000803e3d6000fd5b505050507fa8ff15eb642b39da3ab82bb74a87b76cc3e1aef2b82b70bc2a35458386db29aa87878760405161054f93929190610dc8565b60405180910390a150505050505050565b600054604051631c86b03760e31b81526001600160a01b039091169063e43581b890610590903390600401610d90565b60206040518083038186803b1580156105a857600080fd5b505afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190610c76565b6105fc5760405162461bcd60e51b815260040161035990610ebb565b600080546001600160a01b0319166001600160a01b038316908117825560405190917fad9400e618eb1344fde53db22397a1b82c765527ecbba3a5c86bcac15090828b91a250565b6001818154811061065457600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b60016106a08183610f94565b815481106106be57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546001600160a01b031633148015610721575060016106ed8183610f94565b8154811061070b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501546000145b61073d5760405162461bcd60e51b815260040161035990610e41565b6004546003546001600160a01b03918216916342842e0e91163360016107638187610f94565b8154811061078157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101546040518463ffffffff1660e01b81526004016107b193929190610da4565b600060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b50505050600180826107f19190610f94565b8154811061080f57634e487b7160e01b600052603260045260246000fd5b60009182526020822060069091020180546001600160a01b03191681556001810182905560028101829055600381018290556004810182905560050181905560405182917f6cc4d438459a31fd35ec316d16564607a47877a2139896562cabf23a92978aee91a250565b6000546001600160a01b031690565b60016108948184610f94565b815481106108b257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015481146108e25760405162461bcd60e51b815260040161035990610e1c565b60025461093d906001600160a01b03168460016108ff8187610f94565b8154811061091d57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546001600160a01b031684610ae5565b60006103e861094d836005610f75565b6109579190610f61565b6002549091506109bb906001600160a01b031660016109768187610f94565b8154811061099457634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546003546001600160a01b03918216911684610ae5565b6004546003546001600160a01b03918216916342842e0e91168660016109e18189610f94565b815481106109ff57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101546040518463ffffffff1660e01b8152600401610a2f93929190610da4565b600060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b50505050600180600185610a719190610f94565b81548110610a8f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501819055507fadb316c54462c1303594dfdda335cf93b2cb2ac09f9cb8c44c793876ce2564ce848484604051610ad793929190610dc8565b60405180910390a150505050565b600080856001600160a01b03166323b872dd868686604051602401610b0c93929190610da4565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610b459190610d57565b6000604051808303816000865af19150503d8060008114610b82576040519150601f19603f3d011682016040523d82523d6000602084013e610b87565b606091505b5091509150818015610bb1575080511580610bb1575080806020019051810190610bb19190610c76565b610bcd5760405162461bcd60e51b815260040161035990610efc565b505050505050565b600060208284031215610be6578081fd5b8135610bf181610feb565b9392505050565b600080600060608486031215610c0c578182fd5b8335610c1781610feb565b92506020840135610c2781610feb565b91506040840135610c3781610feb565b809150509250925092565b600080600060608486031215610c56578283fd5b8335610c6181610feb565b95602085013595506040909401359392505050565b600060208284031215610c87578081fd5b81518015158114610bf1578182fd5b600060208284031215610ca7578081fd5b8151610bf181610feb565b600060a08284031215610cc3578081fd5b60405160a0810181811067ffffffffffffffff82111715610cf257634e487b7160e01b83526041600452602483fd5b6040528251610d0081610feb565b81526020830151610d1081610feb565b806020830152506040830151604082015260608301516060820152608083015160808201528091505092915050565b600060208284031215610d50578081fd5b5035919050565b60008251815b81811015610d775760208186018101518583015201610d5d565b81811115610d855782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03969096168652602086019490945260408501929092526060840152608083015260a082015260c00190565b6020808252600b908201526a43616e206e6f742062757960a81b604082015260600190565b60208082526023908201527f5468652063757272656e74207573657220686173206e6f207065726d697373696040820152626f6e7360e81b606082015260800190565b60208082526019908201527f54686520616464726573732063616e6e6f742062652073657400000000000000604082015260600190565b60208082526021908201527f436f72655265663a2043616c6c6572206973206e6f74206120676f7665726e6f6040820152603960f91b606082015260800190565b60208082526024908201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416040820152631253115160e21b606082015260800190565b90815260200190565b60008219821115610f5c57610f5c610fbf565b500190565b600082610f7057610f70610fd5565b500490565b6000816000190483118215151615610f8f57610f8f610fbf565b500290565b600082821015610fa657610fa6610fbf565b500390565b600082610fba57610fba610fd5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461100057600080fd5b5056fea26469706673582212206a3ac44ee1a40a0508d740d2334c052bd80dc6420353ebe30b877c68e6300c5164736f6c63430008000033a264697066735822122025d316f2e9aff60ce47e168cbf556da20e2daf7ed28193b303edbc33c969e8a764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100bd578063b09614d6146100c5578063f2fde38b146100cd578063f5ff5c76146100e05761007d565b8063184b9559146100825780631b424c2514610097578063715018a6146100b5575b600080fd5b6100956100903660046103c0565b6100e8565b005b61009f6101e7565b6040516100ac9190610402565b60405180910390f35b6100956101f6565b61009f610241565b610095610250565b6100956100db36600461039f565b6102a2565b61009f610313565b6100f0610322565b6001600160a01b0316610101610241565b6001600160a01b0316146101305760405162461bcd60e51b81526004016101279061047f565b60405180910390fd5b8260405161013d90610376565b6101479190610402565b604051809103906000f080158015610163573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03928316179081905560025460405163184b955960e01b81529183169263184b9559926101b0929091169086908690600401610416565b600060405180830381600087803b1580156101ca57600080fd5b505af11580156101de573d6000803e3d6000fd5b50505050505050565b6001546001600160a01b031681565b6101fe610322565b6001600160a01b031661020f610241565b6001600160a01b0316146102355760405162461bcd60e51b81526004016101279061047f565b61023f6000610326565b565b6000546001600160a01b031690565b610258610322565b6001600160a01b0316610269610241565b6001600160a01b03161461028f5760405162461bcd60e51b81526004016101279061047f565b610297610241565b6001600160a01b0316ff5b6102aa610322565b6001600160a01b03166102bb610241565b6001600160a01b0316146102e15760405162461bcd60e51b81526004016101279061047f565b6001600160a01b0381166103075760405162461bcd60e51b815260040161012790610439565b61031081610326565b50565b6002546001600160a01b031681565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6110ca806104b583390190565b80356001600160a01b038116811461039a57600080fd5b919050565b6000602082840312156103b0578081fd5b6103b982610383565b9392505050565b6000806000606084860312156103d4578182fd5b6103dd84610383565b92506103eb60208501610383565b91506103f960408501610383565b90509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe608060405234801561001057600080fd5b506040516110ca3803806110ca83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b611039806100916000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806380c9419e1161005b57806380c9419e146100e6578063926a59141461010b578063f2f4eb261461011e578063f3a469b41461012657610088565b8063135b54dd1461008d578063184b9559146100ab5780633e11741f146100c057806380009630146100d3575b600080fd5b610095610139565b6040516100a29190610d90565b60405180910390f35b6100be6100b9366004610bf8565b6101c5565b005b6100be6100ce366004610c42565b610202565b6100be6100e1366004610bd5565b610560565b6100f96100f4366004610d3f565b610644565b6040516100a296959493929190610de9565b6100be610119366004610d3f565b610694565b610095610879565b6100be610134366004610c42565b610888565b60008060009054906101000a90046001600160a01b03166001600160a01b03166318f7d8626040518163ffffffff1660e01b815260040160206040518083038186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190610c96565b905090565b600280546001600160a01b03199081166001600160a01b039485161790915560038054821694841694909417909355600480549093169116179055565b600061021364010000000042610fab565b60048054604051634d65beb160e01b81529293506000926001600160a01b0390911691634d65beb19161024891889101610f40565b60a06040518083038186803b15801561026057600080fd5b505afa158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190610cb2565b6080015160048054604051634d65beb160e01b81529293506001600160a01b031691634d65beb1916102cc91889101610f40565b60a06040518083038186803b1580156102e457600080fd5b505afa1580156102f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031c9190610cb2565b516001600160a01b03868116911614801561033d57508163ffffffff168110155b6103625760405162461bcd60e51b815260040161035990610e84565b60405180910390fd5b600180546000916103739190610f49565b6040805160c0810182526001600160a01b03898116825260208201898152828401858152606084018a815260808501898152600060a08701818152600180548082018255925287517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600690930292830180546001600160a01b03191691891691909117905594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf782015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf884015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa82015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb90910155600480546003549451632142170760e11b81529596509294928216936342842e0e936104ea938d939216918c9101610da4565b600060405180830381600087803b15801561050457600080fd5b505af1158015610518573d6000803e3d6000fd5b505050507fa8ff15eb642b39da3ab82bb74a87b76cc3e1aef2b82b70bc2a35458386db29aa87878760405161054f93929190610dc8565b60405180910390a150505050505050565b600054604051631c86b03760e31b81526001600160a01b039091169063e43581b890610590903390600401610d90565b60206040518083038186803b1580156105a857600080fd5b505afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190610c76565b6105fc5760405162461bcd60e51b815260040161035990610ebb565b600080546001600160a01b0319166001600160a01b038316908117825560405190917fad9400e618eb1344fde53db22397a1b82c765527ecbba3a5c86bcac15090828b91a250565b6001818154811061065457600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0390941695509193909286565b60016106a08183610f94565b815481106106be57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546001600160a01b031633148015610721575060016106ed8183610f94565b8154811061070b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501546000145b61073d5760405162461bcd60e51b815260040161035990610e41565b6004546003546001600160a01b03918216916342842e0e91163360016107638187610f94565b8154811061078157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101546040518463ffffffff1660e01b81526004016107b193929190610da4565b600060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b50505050600180826107f19190610f94565b8154811061080f57634e487b7160e01b600052603260045260246000fd5b60009182526020822060069091020180546001600160a01b03191681556001810182905560028101829055600381018290556004810182905560050181905560405182917f6cc4d438459a31fd35ec316d16564607a47877a2139896562cabf23a92978aee91a250565b6000546001600160a01b031690565b60016108948184610f94565b815481106108b257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015481146108e25760405162461bcd60e51b815260040161035990610e1c565b60025461093d906001600160a01b03168460016108ff8187610f94565b8154811061091d57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546001600160a01b031684610ae5565b60006103e861094d836005610f75565b6109579190610f61565b6002549091506109bb906001600160a01b031660016109768187610f94565b8154811061099457634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201546003546001600160a01b03918216911684610ae5565b6004546003546001600160a01b03918216916342842e0e91168660016109e18189610f94565b815481106109ff57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600101546040518463ffffffff1660e01b8152600401610a2f93929190610da4565b600060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b50505050600180600185610a719190610f94565b81548110610a8f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600501819055507fadb316c54462c1303594dfdda335cf93b2cb2ac09f9cb8c44c793876ce2564ce848484604051610ad793929190610dc8565b60405180910390a150505050565b600080856001600160a01b03166323b872dd868686604051602401610b0c93929190610da4565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051610b459190610d57565b6000604051808303816000865af19150503d8060008114610b82576040519150601f19603f3d011682016040523d82523d6000602084013e610b87565b606091505b5091509150818015610bb1575080511580610bb1575080806020019051810190610bb19190610c76565b610bcd5760405162461bcd60e51b815260040161035990610efc565b505050505050565b600060208284031215610be6578081fd5b8135610bf181610feb565b9392505050565b600080600060608486031215610c0c578182fd5b8335610c1781610feb565b92506020840135610c2781610feb565b91506040840135610c3781610feb565b809150509250925092565b600080600060608486031215610c56578283fd5b8335610c6181610feb565b95602085013595506040909401359392505050565b600060208284031215610c87578081fd5b81518015158114610bf1578182fd5b600060208284031215610ca7578081fd5b8151610bf181610feb565b600060a08284031215610cc3578081fd5b60405160a0810181811067ffffffffffffffff82111715610cf257634e487b7160e01b83526041600452602483fd5b6040528251610d0081610feb565b81526020830151610d1081610feb565b806020830152506040830151604082015260608301516060820152608083015160808201528091505092915050565b600060208284031215610d50578081fd5b5035919050565b60008251815b81811015610d775760208186018101518583015201610d5d565b81811115610d855782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03969096168652602086019490945260408501929092526060840152608083015260a082015260c00190565b6020808252600b908201526a43616e206e6f742062757960a81b604082015260600190565b60208082526023908201527f5468652063757272656e74207573657220686173206e6f207065726d697373696040820152626f6e7360e81b606082015260800190565b60208082526019908201527f54686520616464726573732063616e6e6f742062652073657400000000000000604082015260600190565b60208082526021908201527f436f72655265663a2043616c6c6572206973206e6f74206120676f7665726e6f6040820152603960f91b606082015260800190565b60208082526024908201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416040820152631253115160e21b606082015260800190565b90815260200190565b60008219821115610f5c57610f5c610fbf565b500190565b600082610f7057610f70610fd5565b500490565b6000816000190483118215151615610f8f57610f8f610fbf565b500290565b600082821015610fa657610fa6610fbf565b500390565b600082610fba57610fba610fd5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461100057600080fd5b5056fea26469706673582212206a3ac44ee1a40a0508d740d2334c052bd80dc6420353ebe30b877c68e6300c5164736f6c63430008000033a264697066735822122025d316f2e9aff60ce47e168cbf556da20e2daf7ed28193b303edbc33c969e8a764736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2114:132",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:132",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:132"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:132"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:132"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:132"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:132",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:132",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:132"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:132"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:132",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:132"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:132"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:132"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:132"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:132"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:132"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:132"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:132",
                "type": ""
              }
            ],
            "src": "14:175:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:132"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:132"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:132"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:132",
                "type": ""
              }
            ],
            "src": "194:198:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "501:246:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "547:26:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "556:6:132"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "564:6:132"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "549:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "549:22:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "549:22:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "522:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "531:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "518:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "518:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "543:2:132",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "514:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "514:32:132"
                  },
                  "nodeType": "YulIf",
                  "src": "511:2:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "582:41:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "613:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "592:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:31:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "582:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "632:50:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "667:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "678:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "663:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "663:18:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "642:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:40:132"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "632:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "691:50:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "726:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "737:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "722:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "722:18:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "701:20:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:40:132"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "691:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "451:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "462:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "474:6:132",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "482:6:132",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "490:6:132",
                "type": ""
              }
            ],
            "src": "397:350:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "853:102:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "863:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "875:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "886:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "871:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "863:4:132"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "905:9:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "920:6:132"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "936:3:132",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "941:1:132",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "932:3:132"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "932:11:132"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "945:1:132",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "928:3:132"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "928:19:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "916:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "916:32:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "898:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "898:51:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "898:51:132"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "822:9:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "833:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "844:4:132",
                "type": ""
              }
            ],
            "src": "752:203:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1117:227:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1127:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1139:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:132",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1135:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1127:4:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1162:29:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1180:3:132",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1185:1:132",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1176:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1176:11:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1189:1:132",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1172:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:19:132"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1166:2:132",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1207:9:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1222:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1230:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1218:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1218:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:34:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1200:34:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1254:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1265:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1250:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1250:18:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1274:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1282:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1270:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1270:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1243:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1243:43:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1243:43:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1306:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1317:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1302:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1302:18:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1326:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1334:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1322:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1322:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1295:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1295:43:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1295:43:132"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1070:9:132",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1081:6:132",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1089:6:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1097:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1108:4:132",
                "type": ""
              }
            ],
            "src": "960:384:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1523:228:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1540:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1551:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1533:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1533:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1533:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1574:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1585:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1570:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1570:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1590:2:132",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1563:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1563:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1613:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1624:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1609:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1609:18:132"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1629:34:132",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1602:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1602:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1602:62:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1684:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1695:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1680:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1680:18:132"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1700:8:132",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1673:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1673:36:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1673:36:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1718:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1730:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1741:3:132",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1726:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1726:19:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1718:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1500:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1514:4:132",
                "type": ""
              }
            ],
            "src": "1349:402:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1930:182:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1947:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1958:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1940:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1940:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1940:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1981:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1992:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1977:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1977:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1997:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1970:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1970:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1970:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2020:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2031:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2016:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2016:18:132"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2036:34:132",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2009:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2009:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2009:62:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2080:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2092:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2103:2:132",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2088:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2088:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2080:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1907:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1921:4:132",
                "type": ""
              }
            ],
            "src": "1756:356:132"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 132,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "207:420:93:-:0;;;;;;;;;;;;-1:-1:-1;867:23:119;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;207:420:93;;587:96:125;666:10;587:96;:::o;2041:169:119:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:119;;;-1:-1:-1;;;;;;2131:17:119;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;207:420:93:-;;;;;;;",
  "deployedSourceMap": "207:420:93:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;324:203;;;;;;:::i;:::-;;:::i;:::-;;264:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:119;;;:::i;973:85::-;;;:::i;533::93:-;;;:::i;1846:189:119:-;;;;;;:::i;:::-;;:::i;297:20:93:-;;;:::i;324:203::-;1196:12:119;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:119;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:119;;1177:68;;;;-1:-1:-1;;;1177:68:119;;;;;;;:::i;:::-;;;;;;;;;449:4:93::1;427:27;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;407:11:93::1;:48:::0;;-1:-1:-1;;;;;;407:48:93::1;-1:-1:-1::0;;;;;407:48:93;;::::1;;::::0;;;;500:5:::1;::::0;464:55:::1;::::0;-1:-1:-1;;;464:55:93;;482:11;;::::1;::::0;464:35:::1;::::0;:55:::1;::::0;500:5;;::::1;::::0;506:3;;510:8;;464:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;324:203:::0;;;:::o;264:26::-;;;-1:-1:-1;;;;;264:26:93;;:::o;1605:92:119:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:119;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:119;;1177:68;;;;-1:-1:-1;;;1177:68:119;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:119;973:85;:::o;533::93:-;1196:12:119;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:119;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:119;;1177:68;;;;-1:-1:-1;;;1177:68:119;;;;;;;:::i;:::-;601:7:93::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;580:30:93::1;;1846:189:119::0;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:119;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:119;;1177:68;;;;-1:-1:-1;;;1177:68:119;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:119;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:119::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;297:20:93:-;;;-1:-1:-1;;;;;297:20:93;;:::o;587:96:125:-;666:10;587:96;:::o;2041:169:119:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:119;;;-1:-1:-1;;;;;;2131:17:119;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:175:132:-;84:20;;-1:-1:-1;;;;;133:31:132;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:132:o;397:350::-;;;;543:2;531:9;522:7;518:23;514:32;511:2;;;564:6;556;549:22;511:2;592:31;613:9;592:31;:::i;:::-;582:41;;642:40;678:2;667:9;663:18;642:40;:::i;:::-;632:50;;701:40;737:2;726:9;722:18;701:40;:::i;:::-;691:50;;501:246;;;;;:::o;752:203::-;-1:-1:-1;;;;;916:32:132;;;;898:51;;886:2;871:18;;853:102::o;960:384::-;-1:-1:-1;;;;;1218:15:132;;;1200:34;;1270:15;;;1265:2;1250:18;;1243:43;1322:15;;;1317:2;1302:18;;1295:43;1150:2;1135:18;;1117:227::o;1349:402::-;1551:2;1533:21;;;1590:2;1570:18;;;1563:30;1629:34;1624:2;1609:18;;1602:62;-1:-1:-1;;;1695:2:132;1680:18;;1673:36;1741:3;1726:19;;1523:228::o;1756:356::-;1958:2;1940:21;;;1977:18;;;1970:30;2036:34;2031:2;2016:18;;2009:62;2103:2;2088:18;;1930:182::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\npragma experimental ABIEncoderV2;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../RainbowBank/market721/VipExchangeMarket.sol\";\r\n\r\ncontract VipExchangeMarketOrchestrator is  Ownable{\r\n    address public vipExchange;\r\n    address public agent;\r\n    function init(address core,address rbt,address vipToken) public  onlyOwner{\r\n      vipExchange=address(new VipExchangeMarket(core));\r\n      VipExchangeMarket(vipExchange).init(agent,rbt,vipToken);\r\n    }\r\n    function detonate() public  onlyOwner {\r\n      selfdestruct(payable(owner()));\r\n    }\r\n    \r\n}",
  "sourcePath": "D:/公司项目/rainbow/RainbowDao-protocol/contracts/orchestrator/VipExchangeMarketOrchestrator.sol",
  "ast": {
    "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/orchestrator/VipExchangeMarketOrchestrator.sol",
    "exportedSymbols": {
      "Address": [
        30071
      ],
      "Context": [
        30093
      ],
      "CoreRef": [
        22381
      ],
      "Governance721": [
        27123
      ],
      "ICore": [
        13618
      ],
      "ICoreRef": [
        14189
      ],
      "IERC20": [
        29749
      ],
      "IERC721Receiver": [
        14295
      ],
      "IGovernance721": [
        14435
      ],
      "IPermissions": [
        13687
      ],
      "IRbtDeposit721": [
        14712
      ],
      "IRbtVip": [
        13307
      ],
      "Ownable": [
        29079
      ],
      "Set": [
        15973
      ],
      "TransferHelper": [
        16133
      ],
      "VipExchangeMarket": [
        1722
      ],
      "VipExchangeMarketOrchestrator": [
        19725
      ],
      "userVipStruct": [
        16228
      ]
    },
    "id": 19726,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19669,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:93"
      },
      {
        "id": 19670,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:93"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 19671,
        "nodeType": "ImportDirective",
        "scope": 19726,
        "sourceUnit": 29080,
        "src": "93:52:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/RainbowBank/market721/VipExchangeMarket.sol",
        "file": "../RainbowBank/market721/VipExchangeMarket.sol",
        "id": 19672,
        "nodeType": "ImportDirective",
        "scope": 19726,
        "sourceUnit": 1723,
        "src": "147:56:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19673,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29079,
              "src": "250:7:93"
            },
            "id": 19674,
            "nodeType": "InheritanceSpecifier",
            "src": "250:7:93"
          }
        ],
        "contractDependencies": [
          1722,
          29079,
          30093
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19725,
        "linearizedBaseContracts": [
          19725,
          29079,
          30093
        ],
        "name": "VipExchangeMarketOrchestrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1b424c25",
            "id": 19676,
            "mutability": "mutable",
            "name": "vipExchange",
            "nodeType": "VariableDeclaration",
            "scope": 19725,
            "src": "264:26:93",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19675,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "264:7:93",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5ff5c76",
            "id": 19678,
            "mutability": "mutable",
            "name": "agent",
            "nodeType": "VariableDeclaration",
            "scope": 19725,
            "src": "297:20:93",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19677,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "297:7:93",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 19709,
              "nodeType": "Block",
              "src": "398:129:93",
              "statements": [
                {
                  "expression": {
                    "id": 19698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19689,
                      "name": "vipExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19676,
                      "src": "407:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 19695,
                              "name": "core",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19680,
                              "src": "449:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 19694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "427:21:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_VipExchangeMarket_$1722_$",
                              "typeString": "function (address) returns (contract VipExchangeMarket)"
                            },
                            "typeName": {
                              "id": 19693,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 19692,
                                "name": "VipExchangeMarket",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1722,
                                "src": "431:17:93"
                              },
                              "referencedDeclaration": 1722,
                              "src": "431:17:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VipExchangeMarket_$1722",
                                "typeString": "contract VipExchangeMarket"
                              }
                            }
                          },
                          "id": 19696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "427:27:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VipExchangeMarket_$1722",
                            "typeString": "contract VipExchangeMarket"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VipExchangeMarket_$1722",
                            "typeString": "contract VipExchangeMarket"
                          }
                        ],
                        "id": 19691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "419:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 19690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "419:7:93",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 19697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "419:36:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "407:48:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19699,
                  "nodeType": "ExpressionStatement",
                  "src": "407:48:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19704,
                        "name": "agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19678,
                        "src": "500:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19705,
                        "name": "rbt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19682,
                        "src": "506:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19706,
                        "name": "vipToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19684,
                        "src": "510:8:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 19701,
                            "name": "vipExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19676,
                            "src": "482:11:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19700,
                          "name": "VipExchangeMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1722,
                          "src": "464:17:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VipExchangeMarket_$1722_$",
                            "typeString": "type(contract VipExchangeMarket)"
                          }
                        },
                        "id": 19702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "464:30:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VipExchangeMarket_$1722",
                          "typeString": "contract VipExchangeMarket"
                        }
                      },
                      "id": 19703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1491,
                      "src": "464:35:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address) external"
                      }
                    },
                    "id": 19707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:55:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19708,
                  "nodeType": "ExpressionStatement",
                  "src": "464:55:93"
                }
              ]
            },
            "functionSelector": "184b9559",
            "id": 19710,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19687,
                "modifierName": {
                  "id": 19686,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29022,
                  "src": "389:9:93"
                },
                "nodeType": "ModifierInvocation",
                "src": "389:9:93"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19680,
                  "mutability": "mutable",
                  "name": "core",
                  "nodeType": "VariableDeclaration",
                  "scope": 19710,
                  "src": "338:12:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19682,
                  "mutability": "mutable",
                  "name": "rbt",
                  "nodeType": "VariableDeclaration",
                  "scope": 19710,
                  "src": "351:11:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19684,
                  "mutability": "mutable",
                  "name": "vipToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 19710,
                  "src": "363:16:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "337:43:93"
            },
            "returnParameters": {
              "id": 19688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "398:0:93"
            },
            "scope": 19725,
            "src": "324:203:93",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19723,
              "nodeType": "Block",
              "src": "571:47:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19718,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29008,
                              "src": "601:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 19719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "601:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "593:8:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 19716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "593:8:93",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "593:16:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 19715,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "580:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 19721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:30:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19722,
                  "nodeType": "ExpressionStatement",
                  "src": "580:30:93"
                }
              ]
            },
            "functionSelector": "b09614d6",
            "id": 19724,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19713,
                "modifierName": {
                  "id": 19712,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29022,
                  "src": "561:9:93"
                },
                "nodeType": "ModifierInvocation",
                "src": "561:9:93"
              }
            ],
            "name": "detonate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "550:2:93"
            },
            "returnParameters": {
              "id": 19714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:0:93"
            },
            "scope": 19725,
            "src": "533:85:93",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19726,
        "src": "207:420:93"
      }
    ],
    "src": "33:594:93"
  },
  "legacyAST": {
    "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/orchestrator/VipExchangeMarketOrchestrator.sol",
    "exportedSymbols": {
      "Address": [
        30071
      ],
      "Context": [
        30093
      ],
      "CoreRef": [
        22381
      ],
      "Governance721": [
        27123
      ],
      "ICore": [
        13618
      ],
      "ICoreRef": [
        14189
      ],
      "IERC20": [
        29749
      ],
      "IERC721Receiver": [
        14295
      ],
      "IGovernance721": [
        14435
      ],
      "IPermissions": [
        13687
      ],
      "IRbtDeposit721": [
        14712
      ],
      "IRbtVip": [
        13307
      ],
      "Ownable": [
        29079
      ],
      "Set": [
        15973
      ],
      "TransferHelper": [
        16133
      ],
      "VipExchangeMarket": [
        1722
      ],
      "VipExchangeMarketOrchestrator": [
        19725
      ],
      "userVipStruct": [
        16228
      ]
    },
    "id": 19726,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19669,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:93"
      },
      {
        "id": 19670,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:93"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 19671,
        "nodeType": "ImportDirective",
        "scope": 19726,
        "sourceUnit": 29080,
        "src": "93:52:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/RainbowBank/market721/VipExchangeMarket.sol",
        "file": "../RainbowBank/market721/VipExchangeMarket.sol",
        "id": 19672,
        "nodeType": "ImportDirective",
        "scope": 19726,
        "sourceUnit": 1723,
        "src": "147:56:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19673,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29079,
              "src": "250:7:93"
            },
            "id": 19674,
            "nodeType": "InheritanceSpecifier",
            "src": "250:7:93"
          }
        ],
        "contractDependencies": [
          1722,
          29079,
          30093
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19725,
        "linearizedBaseContracts": [
          19725,
          29079,
          30093
        ],
        "name": "VipExchangeMarketOrchestrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1b424c25",
            "id": 19676,
            "mutability": "mutable",
            "name": "vipExchange",
            "nodeType": "VariableDeclaration",
            "scope": 19725,
            "src": "264:26:93",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19675,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "264:7:93",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5ff5c76",
            "id": 19678,
            "mutability": "mutable",
            "name": "agent",
            "nodeType": "VariableDeclaration",
            "scope": 19725,
            "src": "297:20:93",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19677,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "297:7:93",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 19709,
              "nodeType": "Block",
              "src": "398:129:93",
              "statements": [
                {
                  "expression": {
                    "id": 19698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19689,
                      "name": "vipExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19676,
                      "src": "407:11:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 19695,
                              "name": "core",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19680,
                              "src": "449:4:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 19694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "427:21:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_VipExchangeMarket_$1722_$",
                              "typeString": "function (address) returns (contract VipExchangeMarket)"
                            },
                            "typeName": {
                              "id": 19693,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 19692,
                                "name": "VipExchangeMarket",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1722,
                                "src": "431:17:93"
                              },
                              "referencedDeclaration": 1722,
                              "src": "431:17:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VipExchangeMarket_$1722",
                                "typeString": "contract VipExchangeMarket"
                              }
                            }
                          },
                          "id": 19696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "427:27:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VipExchangeMarket_$1722",
                            "typeString": "contract VipExchangeMarket"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VipExchangeMarket_$1722",
                            "typeString": "contract VipExchangeMarket"
                          }
                        ],
                        "id": 19691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "419:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 19690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "419:7:93",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 19697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "419:36:93",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "407:48:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19699,
                  "nodeType": "ExpressionStatement",
                  "src": "407:48:93"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19704,
                        "name": "agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19678,
                        "src": "500:5:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19705,
                        "name": "rbt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19682,
                        "src": "506:3:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19706,
                        "name": "vipToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19684,
                        "src": "510:8:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 19701,
                            "name": "vipExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19676,
                            "src": "482:11:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19700,
                          "name": "VipExchangeMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1722,
                          "src": "464:17:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VipExchangeMarket_$1722_$",
                            "typeString": "type(contract VipExchangeMarket)"
                          }
                        },
                        "id": 19702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "464:30:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VipExchangeMarket_$1722",
                          "typeString": "contract VipExchangeMarket"
                        }
                      },
                      "id": 19703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1491,
                      "src": "464:35:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address) external"
                      }
                    },
                    "id": 19707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:55:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19708,
                  "nodeType": "ExpressionStatement",
                  "src": "464:55:93"
                }
              ]
            },
            "functionSelector": "184b9559",
            "id": 19710,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19687,
                "modifierName": {
                  "id": 19686,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29022,
                  "src": "389:9:93"
                },
                "nodeType": "ModifierInvocation",
                "src": "389:9:93"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19680,
                  "mutability": "mutable",
                  "name": "core",
                  "nodeType": "VariableDeclaration",
                  "scope": 19710,
                  "src": "338:12:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19682,
                  "mutability": "mutable",
                  "name": "rbt",
                  "nodeType": "VariableDeclaration",
                  "scope": 19710,
                  "src": "351:11:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19684,
                  "mutability": "mutable",
                  "name": "vipToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 19710,
                  "src": "363:16:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "337:43:93"
            },
            "returnParameters": {
              "id": 19688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "398:0:93"
            },
            "scope": 19725,
            "src": "324:203:93",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19723,
              "nodeType": "Block",
              "src": "571:47:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 19718,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29008,
                              "src": "601:5:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 19719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "601:7:93",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "593:8:93",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 19716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "593:8:93",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "593:16:93",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 19715,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "580:12:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 19721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:30:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19722,
                  "nodeType": "ExpressionStatement",
                  "src": "580:30:93"
                }
              ]
            },
            "functionSelector": "b09614d6",
            "id": 19724,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19713,
                "modifierName": {
                  "id": 19712,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29022,
                  "src": "561:9:93"
                },
                "nodeType": "ModifierInvocation",
                "src": "561:9:93"
              }
            ],
            "name": "detonate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "550:2:93"
            },
            "returnParameters": {
              "id": 19714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:0:93"
            },
            "scope": 19725,
            "src": "533:85:93",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19726,
        "src": "207:420:93"
      }
    ],
    "src": "33:594:93"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1234": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x860C3B9744911e277751FFbB2b61C829220614d9",
      "transactionHash": "0x8335e08f1aa772bdc4807a3b6b3dc7d07d56140cadd4bdc2b6e8fde8cab7a742"
    },
    "1634354924792": {
      "events": {},
      "links": {},
      "address": "0x6f294B9b5D068E44a52306956a676bBFC42b8A8B",
      "transactionHash": "0x08ebdf558639fd278328300380c5fed11d964c3b00ba4da97802b34dc989b4dc"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-10-16T03:51:57.576Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}