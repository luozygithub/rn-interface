{
  "contractName": "RbConsensusOrchestrator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rbConsersusAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "RBT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "VIP",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [
        {
          "internalType": "address",
          "name": "rbConsersus",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"RBT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"VIP\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rbConsersus\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rbConsersusAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/orchestrator/RbConsensusOrchestrator.sol\":\"RbConsensusOrchestrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/IRbtVip.sol\":{\"keccak256\":\"0xb23e106fc6ed4a5cd22ca1d278fc970f7c68c580f0e77c7a81747c39b890c49d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ca12fa22487b60ec42a3b79f9b0d9b5b8f7657d034f59b812a2f924d2f0818\",\"dweb:/ipfs/QmRK4BVekzAUrGBdNTcuyUPDWRwFidzC3uFSRx3ApyaGn2\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/bank/IRbBank.sol\":{\"keccak256\":\"0x238fffe7d42ab5d3fc9bb6bf20b5c2b66b1196c38661a464ad4706fa7f0bdac3\",\"urls\":[\"bzz-raw://fa721e320d773d1260e8d7bfacd58cfe1888b591a2e7206fbbff334a1f174025\",\"dweb:/ipfs/Qmc7Tp2wVgK4qrv111KRnUqxvwU5RFu4NTF4V3U4TCbusM\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/interface/mining/IOpenOracle.sol\":{\"keccak256\":\"0x8e16299c0dad59f1294165b603b7996d3c607ef4482d04e46c83d912291a5a0d\",\"urls\":[\"bzz-raw://95d25cc4a936195a072177db0f8e50f4795d679ab90abe9bb4b3873378b551f6\",\"dweb:/ipfs/Qmdo87SGwMZh2Jdu6Nhy37M12MVnYTqiBzNumwnit7QZVz\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/lib/TransferHelper.sol\":{\"keccak256\":\"0xcec5a0301ee08388f23d2914d237aa52a941741bfdbbeb31562af0dfdf1f9ff0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://449fd0dbbed0d1c50877fd6be68d34084baddbbb2b118c7a978402087fdab3ea\",\"dweb:/ipfs/QmQt3Z1ddfvSPs5oBdJmEgjfWFfdDfFt2YnBCqooeLR3B2\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/lib/userVipStruct.sol\":{\"keccak256\":\"0xf8ed5f1234338805bb654af80a55349b27832861142f7f48961ea10096df854d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae39182d11315cc73d4dc2c8258a8ab60316e2428dbfe31066e356702d9b1e93\",\"dweb:/ipfs/QmaPnuk5eD4FADSHp68YXcFGPuaxWARBctCvKHm9arsdHX\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/mining/MiningBase.sol\":{\"keccak256\":\"0x32cc1e94866ce9f9ca911117b531d76295a06e40ebab0c5ab7d1d25f65dfe3fb\",\"urls\":[\"bzz-raw://3282962b5dcbfccd8effa8f5ba2942bebebb04450b5a763443a427b4065afa00\",\"dweb:/ipfs/QmUY523k2niNA6zLUYFRbK4bmKonsrNojEqW8srr59CS1x\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/mining/RbConsensus.sol\":{\"keccak256\":\"0x074c685751d2ec77b92d7a97c66a980782a643775e6aa2c65ffe9be2e573543d\",\"urls\":[\"bzz-raw://5c789983ed764ad9fce70cc1ae579b94d4a787738841ff766a094b4b58c4b96c\",\"dweb:/ipfs/QmURsuWx1XUBNrWDmBzdvbcUheGPK7s5SCHevBPEnkzZW4\"]},\"/D/\\u516c\\u53f8\\u9879\\u76ee/rainbow/RainbowDao-protocol/contracts/orchestrator/RbConsensusOrchestrator.sol\":{\"keccak256\":\"0x5e18912bd3e64c8073b86b7bae98ae90e172104a1fe5721362a80e2fa612f23b\",\"urls\":[\"bzz-raw://91554ba62f79462c356f008ee350f42e04dc22c4dc93ee60a660242bebe81624\",\"dweb:/ipfs/QmVojWQxrMaX7MRDzFDskdN4EtHDqfDxXW7pz4pHPYMdZL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61270d806100896000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063c35a95e314610084578063f09a40161461008c578063f2fde38b1461009f575b600080fd5b6100646100b2565b005b61006e610106565b60405161007b9190610307565b60405180910390f35b61006e610115565b61006e61009a3660046102d5565b610124565b6100646100ad3660046102b4565b6101c6565b6100ba610237565b6001600160a01b03166100cb610106565b6001600160a01b0316146100fa5760405162461bcd60e51b81526004016100f19061038c565b60405180910390fd5b610104600061023b565b565b6000546001600160a01b031690565b6001546001600160a01b031681565b600061012e610237565b6001600160a01b031661013f610106565b6001600160a01b0316146101655760405162461bcd60e51b81526004016100f19061038c565b82600083336040516101769061028b565b610183949392919061031b565b604051809103906000f08015801561019f573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b039290921691909117905592915050565b6101ce610237565b6001600160a01b03166101df610106565b6001600160a01b0316146102055760405162461bcd60e51b81526004016100f19061038c565b6001600160a01b03811661022b5760405162461bcd60e51b81526004016100f190610346565b6102348161023b565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612316806103c283390190565b80356001600160a01b03811681146102af57600080fd5b919050565b6000602082840312156102c5578081fd5b6102ce82610298565b9392505050565b600080604083850312156102e7578081fd5b6102f083610298565b91506102fe60208401610298565b90509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe60806040526301e133806003553480156200001957600080fd5b5060405162002316380380620023168339810160408190526200003c91620000e0565b600080546001600160a01b03199081166001600160a01b039687161790915560018054821694861694909417909355600a8054841692851692909217909155602860075560028054831691909316179091556969e10de76676d08000006008556009805473fceadafab14d46e20144f48824d0c09b1a03f2bc92169190911790556200013c565b80516001600160a01b0381168114620000db57600080fd5b919050565b60008060008060808587031215620000f6578384fd5b6200010185620000c3565b93506200011160208601620000c3565b92506200012160408601620000c3565b91506200013160608601620000c3565b905092959194509250565b6121ca806200014c6000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c8063704b6c0211610130578063acbd675c116100b8578063ed037df31161007c578063ed037df31461044e578063f000fc3514610456578063f433509414610469578063f439ee7e1461047c578063f851a4401461048457610227565b8063acbd675c146103e8578063ae04d45d146103f0578063b1613c0514610403578063b8feb00c14610416578063e18b06051461043b57610227565b806381cd8194116100ff57806381cd8194146103aa57806383f0e4a1146103b25780638909646c146103c557806391b7f5ed146103cd5780639e783685146103e057610227565b8063704b6c021461037457806372a8d7901461038757806379af25a61461038f5780637ee9eaa01461039757610227565b80634f97149a116101b35780635c2996ab116101825780635c2996ab1461031957806360c8f2f71461032c57806363e341a21461033457806367e828bf1461034b5780636fd45fb71461035357610227565b80634f97149a146102bd578063524f3889146102d2578063529a37ad146102f35780635716164c1461030657610227565b80631e83cdab116101fa5780631e83cdab14610285578063327a943a1461028d5780633cf9b1b1146102a05780633d9d7901146102b55780634135b6891461028d57610227565b806302d158041461022c578063072efa6814610255578063105d86da1461025d5780631b3e2cc914610272575b600080fd5b61023f61023a366004611aee565b61048c565b60405161024c9190611fe6565b60405180910390f35b61023f6104ab565b61027061026b366004611c11565b6104b1565b005b61023f610280366004611aee565b6104f7565b610270610509565b61023f61029b366004611aee565b610736565b6102a8610751565b60405161024c9190611d61565b61023f610760565b6102c5610766565b60405161024c9190611e15565b6102e56102e0366004611c49565b61076f565b60405161024c92919061203b565b61023f610301366004611b08565b610810565b61023f610314366004611c84565b610838565b610270610327366004611b63565b61095c565b61023f610ad7565b61033c610c21565b60405161024c93929190611ffd565b6102a8610def565b610366610361366004611aee565b610dfe565b60405161024c929190611fef565b610270610382366004611aee565b610f5a565b61023f61100a565b61023f611010565b6103666103a5366004611b08565b611016565b61023f611052565b6102c56103c0366004611aee565b611058565b6102a861106d565b6102706103db366004611c84565b61107c565b61023f6110ab565b6102a86110b1565b6102706103fe366004611c84565b6110c0565b610270610411366004611b31565b611148565b610429610424366004611b08565b611237565b60405161024c96959493929190612013565b61023f610449366004611b08565b61128b565b61023f6112a8565b610270610464366004611b63565b6112ae565b610270610477366004611cb4565b6113ce565b61023f6116b2565b6102a8611831565b6001600160a01b0381166000908152600560205260409020545b919050565b60075490565b6002546001600160a01b031633146104e45760405162461bcd60e51b81526004016104db90611f4b565b60405180910390fd5b6010805460ff1916911515919091179055565b60046020526000908152604090205481565b60008061051b6401000000004261212d565b905060005b336000908152600560205260409020548110156106f65733600090815260056020526040812080548390811061056657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905080600001518363ffffffff16101580156105e0575080602001518363ffffffff16105b1561067e57600061062f60035461062384600001518763ffffffff1661060691906120cb565b61062960056106236004896040015161184090919063ffffffff16565b90611853565b90611840565b905060006106588360a0015161065285606001518561185f90919063ffffffff16565b9061185f565b9050610664818761186b565b955080836060018181516106789190612080565b90525050505b80602001518363ffffffff16106106e35760006106be8260a00151610652846060015161065260056106236004896040015161184090919063ffffffff16565b90506106ca818661186b565b945080826060018181516106de9190612080565b905250505b50806106ee81612112565b915050610520565b503360009081526004602052604081208054849290610716908490612080565b9091555050600054610732906001600160a01b03163384611877565b5050565b6001600160a01b031660009081526004602052604090205490565b6000546001600160a01b031681565b60065481565b60105460ff1681565b60095460405163fc2525ab60e01b8152600091829172c4770d3feb38ad07f879abd96619fbdeb005209163fc2525ab916107b7916001600160a01b0316908790600401611d99565b604080518083038186803b1580156107ce57600080fd5b505afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190611d13565b9094909350915050565b6001600160a01b03919091166000908152600d60209081526040808320938352929052205490565b3360009081526005602052604081208054429183918590811061086b57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905060006108fa6108dd60035485856020015161062391906120cb565b61062960056106236004876040015161184090919063ffffffff16565b905060006109258360a00151610652856060015161065286886040015161185f90919063ffffffff16565b6060840151909150610937908261186b565b6060840152600054610953906001600160a01b03163383611877565b95945050505050565b6002546001600160a01b031633146109865760405162461bcd60e51b81526004016104db90611f4b565b6002546001600160a01b031633146109b05760405162461bcd60e51b81526004016104db90611e9b565b60005b81518110156107325760008282815181106109de57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a119190611d61565b60206040518083038186803b158015610a2957600080fd5b505afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190611c9c565b9050610a95838381518110610a8657634e487b7160e01b600052603260045260246000fd5b60200260200101513383611877565b6040518190339030907fdd1a0661b3afa263ceb90ee8281d080435497c1df9d5a4720acedc84efd12fe790600090a45080610acf81612112565b9150506109b3565b60008080610aea6401000000004261212d565b905060005b33600090815260056020526040902054811015610c1957336000908152600560205260408120805483908110610b3557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905080600001518363ffffffff1610158015610baf575080602001518363ffffffff16105b15610c06576000610bd560035461062384600001518763ffffffff1661060691906120cb565b9050610c0285610bfc8361065260056106236004896040015161184090919063ffffffff16565b9061186b565b9450505b5080610c1181612112565b915050610aef565b509091505090565b6000808080808080610c386401000000004261212d565b905060005b33600090815260056020526040902054811015610de257336000908152600560205260408120805483908110610c8357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050610cf181604001518761186b90919063ffffffff16565b815190965063ffffffff841610801590610d14575080602001518363ffffffff16105b15610d8a576000610d3a60035461062384600001518763ffffffff1661060691906120cb565b9050610d5f85610bfc8460a0015161065286606001518661185f90919063ffffffff16565b9450610d8686610bfc8361065260056106236004896040015161184090919063ffffffff16565b9550505b80602001518363ffffffff1610610dcf57610dcc84610bfc8360a001516106528560600151610652600561062360048a6040015161184090919063ffffffff16565b93505b5080610dda81612112565b915050610c3d565b5092969195509350915050565b6009546001600160a01b031681565b6000806000610e0c84610736565b600a546040516332854c1360e01b8152919250600091829182916001600160a01b03909116906332854c1390610e46908a90600401611d61565b60206040518083038186803b158015610e5e57600080fd5b505afa158015610e72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e969190611c9c565b905080610ea65760039150600592505b8060011415610eb85760059150600a92505b8060021415610eca5760069150600a92505b8060031415610edc5760079150600f92505b8060041415610eee5760089150600f92505b60015b82811015610f3b576001600160a01b0388166000908152600d60209081526040808320848452909152902054610f279086612080565b945080610f3381612112565b915050610ef1565b5083610f4d6103e86106238387611840565b9550955050505050915091565b6002546001600160a01b03163314610f845760405162461bcd60e51b81526004016104db90611f4b565b6002546001600160a01b03163314610fae5760405162461bcd60e51b81526004016104db90611f4b565b6002546040516001600160a01b038084169216907f38b1065e0d088f6eda3cb9f0efc7bbb9b145907ab0deb0dbfb700d2bb21599e990600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b60085481565b60035481565b600c602052816000526040600020818154811061103257600080fd5b600091825260209091206002909102018054600190910154909250905082565b60075481565b600b6020526000908152604090205460ff1681565b6001546001600160a01b031681565b6002546001600160a01b031633146110a65760405162461bcd60e51b81526004016104db90611f4b565b600755565b600f5481565b600a546001600160a01b031681565b6002546001600160a01b031633146110ea5760405162461bcd60e51b81526004016104db90611f4b565b6002546001600160a01b031633146111145760405162461bcd60e51b81526004016104db90611f4b565b6003546040518291907f330ab878145b7defb2c3a805cb0958be15256ca947060a42e7c08a0faa0f22f590600090a3600355565b8115806111555750816003145b806111605750816006145b8061116b575081600c145b806111765750816018145b806111815750816024145b61119d5760405162461bcd60e51b81526004016104db90611ef3565b600154604051634ce3696f60e11b81526001600160a01b03909116906399c6d2de906111d190339086908690600401611df4565b600060405180830381600087803b1580156111eb57600080fd5b505af11580156111ff573d6000803e3d6000fd5b505060405183925084915033907fd6b6177d76c249d38ccb3b9e158a75b9864fd5dcc8d8d499708767ef6ca801f790600090a4505050565b6005602052816000526040600020818154811061125357600080fd5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493965091945092909186565b600d60209081526000928352604080842090915290825290205481565b600e5481565b6002546001600160a01b031633146112d85760405162461bcd60e51b81526004016104db90611f4b565b60105460ff16156112fb5760405162461bcd60e51b81526004016104db90611e20565b60005b815181101561073257600b600083838151811061132b57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166113bc576001600b600084848151811061137c57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b806113c681612112565b9150506112fe565b60006113ea60646106296007548861185390919063ffffffff16565b90506000859050600080606460065469021e19e0c9bab240000061140e91906120ac565b6114189190612098565b60078054919250600091908261142d83612112565b909155506007546001600160a01b038a166000908152600b60205260409020549192509060ff1615156001146114755760405162461bcd60e51b81526004016104db90611ec6565b6001600160a01b03891661149b5760405162461bcd60e51b81526004016104db90611e72565b8715806114aa57508760075411155b6114c65760405162461bcd60e51b81526004016104db90611fba565b68056bc75e2d631000008610156114ef5760405162461bcd60e51b81526004016104db90611f20565b6114fb8933308d611964565b60005461151c906001600160a01b031633611517896005611853565b611877565b61153361152a876005611853565b600f549061186b565b600f55600e54611543908761186b565b600e55604080518082019091526000908061155f896005611853565b8152602001889052600854909150611577908861185f565b600881905587101561159457600854611590908861185f565b6008555b8660085410156115d9576008546115ac90889061186b565b6115c0906969e10de76676d08000006120cb565b600855600780549060006115d383612112565b91905055505b866008541415611607576969e10de76676d08000006008556007805490600061160183612112565b91905055505b33600090815260046020526040902054611621908861186b565b33600081815260046020908152604080832094909455600c81528382208054600181810183559184529282902086516002909402019283559085015191015590516001600160a01b038c169189918e917f0caedce831599172dfe59db540c9743cf217772cbeb82b67f7cc1ff68039a8969161169d9190611d61565b60405180910390a45050505050505050505050565b600080806116c56401000000004261212d565b905060005b33600090815260056020526040902054811015610c195733600090815260056020526040812080548390811061171057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905080600001518363ffffffff161015801561178a575080602001518363ffffffff16105b156117d95760006117b060035461062384600001518763ffffffff1661060691906120cb565b90506117d585610bfc8460a0015161065286606001518661185f90919063ffffffff16565b9450505b80602001518363ffffffff161061181e5761181b84610bfc8360a001516106528560600151610652600561062360048a6040015161184090919063ffffffff16565b93505b508061182981612112565b9150506116ca565b6002546001600160a01b031681565b600061184c82846120ac565b9392505050565b600061184c8284612098565b600061184c82846120cb565b600061184c8284612080565b600080846001600160a01b031663a9059cbb858560405160240161189c929190611ddb565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516118d59190611d45565b6000604051808303816000865af19150503d8060008114611912576040519150601f19603f3d011682016040523d82523d6000602084013e611917565b606091505b50915091508180156119415750805115806119415750808060200190518101906119419190611c2d565b61195d5760405162461bcd60e51b81526004016104db90611e3b565b5050505050565b600080856001600160a01b03166323b872dd86868660405160240161198b93929190611d75565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516119c49190611d45565b6000604051808303816000865af19150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b5091509150818015611a30575080511580611a30575080806020019051810190611a309190611c2d565b611a4c5760405162461bcd60e51b81526004016104db90611f76565b505050505050565b80356001600160a01b03811681146104a657600080fd5b600082601f830112611a7b578081fd5b813567ffffffffffffffff811115611a9557611a9561216d565b611aa8601f8201601f1916602001612056565b818152846020838601011115611abc578283fd5b816020850160208301379081016020019190915292915050565b805167ffffffffffffffff811681146104a657600080fd5b600060208284031215611aff578081fd5b61184c82611a54565b60008060408385031215611b1a578081fd5b611b2383611a54565b946020939093013593505050565b600080600060608486031215611b45578081fd5b611b4e84611a54565b95602085013595506040909401359392505050565b60006020808385031215611b75578182fd5b823567ffffffffffffffff80821115611b8c578384fd5b818501915085601f830112611b9f578384fd5b813581811115611bb157611bb161216d565b8381029150611bc1848301612056565b8181528481019084860184860187018a1015611bdb578788fd5b8795505b83861015611c0457611bf081611a54565b835260019590950194918601918601611bdf565b5098975050505050505050565b600060208284031215611c22578081fd5b813561184c81612183565b600060208284031215611c3e578081fd5b815161184c81612183565b600060208284031215611c5a578081fd5b813567ffffffffffffffff811115611c70578182fd5b611c7c84828501611a6b565b949350505050565b600060208284031215611c95578081fd5b5035919050565b600060208284031215611cad578081fd5b5051919050565b60008060008060808587031215611cc9578081fd5b84359350611cd960208601611a54565b925060408501359150606085013567ffffffffffffffff811115611cfb578182fd5b611d0787828801611a6b565b91505092959194509250565b60008060408385031215611d25578182fd5b611d2e83611ad6565b9150611d3c60208401611ad6565b90509250929050565b60008251611d578184602087016120e2565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060018060a01b0384168252604060208301528251806040840152611dc68160608501602087016120e2565b601f01601f1916919091016060019392505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b901515815260200190565b6020808252600190820152600360fc1b604082015260600190565b6020808252601f908201527f5472616e7366657248656c7065723a205452414e534645525f4641494c454400604082015260600190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b6020808252601190820152702cb7ba9030b932903737ba1030b236b4b760791b604082015260600190565b60208082526013908201527274686520746f6b656e206e6f7420616c6c6f7760681b604082015260600190565b6020808252601390820152722232b837b9b4ba1036b7b73a341032b93937b960691b604082015260600190565b60208082526011908201527004974277320626967207468616e2031303607c1b604082015260600190565b6020808252601190820152703cb7ba9030b932903737ba1030b236b4b760791b604082015260600190565b60208082526024908201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416040820152631253115160e21b606082015260800190565b6020808252601290820152714d6f7265207468616e20736c69707061676560701b604082015260600190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b958652602086019490945260408501929092526060840152608083015260a082015260c00190565b67ffffffffffffffff92831681529116602082015260400190565b60405181810167ffffffffffffffff811182821017156120785761207861216d565b604052919050565b6000821982111561209357612093612141565b500190565b6000826120a7576120a7612157565b500490565b60008160001904831182151516156120c6576120c6612141565b500290565b6000828210156120dd576120dd612141565b500390565b60005b838110156120fd5781810151838201526020016120e5565b8381111561210c576000848401525b50505050565b600060001982141561212657612126612141565b5060010190565b60008261213c5761213c612157565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461219157600080fd5b5056fea2646970667358221220dee9d04611c7407fa1df933384f244467c30d65fc9d3c0fa4ba5d8b2a410d91f64736f6c63430008000033a26469706673582212206c0caf79b5a580a54ff7ad3cbb0ef3e15b42263a68816b2ed9bd6d8749f6dbbb64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063c35a95e314610084578063f09a40161461008c578063f2fde38b1461009f575b600080fd5b6100646100b2565b005b61006e610106565b60405161007b9190610307565b60405180910390f35b61006e610115565b61006e61009a3660046102d5565b610124565b6100646100ad3660046102b4565b6101c6565b6100ba610237565b6001600160a01b03166100cb610106565b6001600160a01b0316146100fa5760405162461bcd60e51b81526004016100f19061038c565b60405180910390fd5b610104600061023b565b565b6000546001600160a01b031690565b6001546001600160a01b031681565b600061012e610237565b6001600160a01b031661013f610106565b6001600160a01b0316146101655760405162461bcd60e51b81526004016100f19061038c565b82600083336040516101769061028b565b610183949392919061031b565b604051809103906000f08015801561019f573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b039290921691909117905592915050565b6101ce610237565b6001600160a01b03166101df610106565b6001600160a01b0316146102055760405162461bcd60e51b81526004016100f19061038c565b6001600160a01b03811661022b5760405162461bcd60e51b81526004016100f190610346565b6102348161023b565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612316806103c283390190565b80356001600160a01b03811681146102af57600080fd5b919050565b6000602082840312156102c5578081fd5b6102ce82610298565b9392505050565b600080604083850312156102e7578081fd5b6102f083610298565b91506102fe60208401610298565b90509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe60806040526301e133806003553480156200001957600080fd5b5060405162002316380380620023168339810160408190526200003c91620000e0565b600080546001600160a01b03199081166001600160a01b039687161790915560018054821694861694909417909355600a8054841692851692909217909155602860075560028054831691909316179091556969e10de76676d08000006008556009805473fceadafab14d46e20144f48824d0c09b1a03f2bc92169190911790556200013c565b80516001600160a01b0381168114620000db57600080fd5b919050565b60008060008060808587031215620000f6578384fd5b6200010185620000c3565b93506200011160208601620000c3565b92506200012160408601620000c3565b91506200013160608601620000c3565b905092959194509250565b6121ca806200014c6000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c8063704b6c0211610130578063acbd675c116100b8578063ed037df31161007c578063ed037df31461044e578063f000fc3514610456578063f433509414610469578063f439ee7e1461047c578063f851a4401461048457610227565b8063acbd675c146103e8578063ae04d45d146103f0578063b1613c0514610403578063b8feb00c14610416578063e18b06051461043b57610227565b806381cd8194116100ff57806381cd8194146103aa57806383f0e4a1146103b25780638909646c146103c557806391b7f5ed146103cd5780639e783685146103e057610227565b8063704b6c021461037457806372a8d7901461038757806379af25a61461038f5780637ee9eaa01461039757610227565b80634f97149a116101b35780635c2996ab116101825780635c2996ab1461031957806360c8f2f71461032c57806363e341a21461033457806367e828bf1461034b5780636fd45fb71461035357610227565b80634f97149a146102bd578063524f3889146102d2578063529a37ad146102f35780635716164c1461030657610227565b80631e83cdab116101fa5780631e83cdab14610285578063327a943a1461028d5780633cf9b1b1146102a05780633d9d7901146102b55780634135b6891461028d57610227565b806302d158041461022c578063072efa6814610255578063105d86da1461025d5780631b3e2cc914610272575b600080fd5b61023f61023a366004611aee565b61048c565b60405161024c9190611fe6565b60405180910390f35b61023f6104ab565b61027061026b366004611c11565b6104b1565b005b61023f610280366004611aee565b6104f7565b610270610509565b61023f61029b366004611aee565b610736565b6102a8610751565b60405161024c9190611d61565b61023f610760565b6102c5610766565b60405161024c9190611e15565b6102e56102e0366004611c49565b61076f565b60405161024c92919061203b565b61023f610301366004611b08565b610810565b61023f610314366004611c84565b610838565b610270610327366004611b63565b61095c565b61023f610ad7565b61033c610c21565b60405161024c93929190611ffd565b6102a8610def565b610366610361366004611aee565b610dfe565b60405161024c929190611fef565b610270610382366004611aee565b610f5a565b61023f61100a565b61023f611010565b6103666103a5366004611b08565b611016565b61023f611052565b6102c56103c0366004611aee565b611058565b6102a861106d565b6102706103db366004611c84565b61107c565b61023f6110ab565b6102a86110b1565b6102706103fe366004611c84565b6110c0565b610270610411366004611b31565b611148565b610429610424366004611b08565b611237565b60405161024c96959493929190612013565b61023f610449366004611b08565b61128b565b61023f6112a8565b610270610464366004611b63565b6112ae565b610270610477366004611cb4565b6113ce565b61023f6116b2565b6102a8611831565b6001600160a01b0381166000908152600560205260409020545b919050565b60075490565b6002546001600160a01b031633146104e45760405162461bcd60e51b81526004016104db90611f4b565b60405180910390fd5b6010805460ff1916911515919091179055565b60046020526000908152604090205481565b60008061051b6401000000004261212d565b905060005b336000908152600560205260409020548110156106f65733600090815260056020526040812080548390811061056657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905080600001518363ffffffff16101580156105e0575080602001518363ffffffff16105b1561067e57600061062f60035461062384600001518763ffffffff1661060691906120cb565b61062960056106236004896040015161184090919063ffffffff16565b90611853565b90611840565b905060006106588360a0015161065285606001518561185f90919063ffffffff16565b9061185f565b9050610664818761186b565b955080836060018181516106789190612080565b90525050505b80602001518363ffffffff16106106e35760006106be8260a00151610652846060015161065260056106236004896040015161184090919063ffffffff16565b90506106ca818661186b565b945080826060018181516106de9190612080565b905250505b50806106ee81612112565b915050610520565b503360009081526004602052604081208054849290610716908490612080565b9091555050600054610732906001600160a01b03163384611877565b5050565b6001600160a01b031660009081526004602052604090205490565b6000546001600160a01b031681565b60065481565b60105460ff1681565b60095460405163fc2525ab60e01b8152600091829172c4770d3feb38ad07f879abd96619fbdeb005209163fc2525ab916107b7916001600160a01b0316908790600401611d99565b604080518083038186803b1580156107ce57600080fd5b505afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190611d13565b9094909350915050565b6001600160a01b03919091166000908152600d60209081526040808320938352929052205490565b3360009081526005602052604081208054429183918590811061086b57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905060006108fa6108dd60035485856020015161062391906120cb565b61062960056106236004876040015161184090919063ffffffff16565b905060006109258360a00151610652856060015161065286886040015161185f90919063ffffffff16565b6060840151909150610937908261186b565b6060840152600054610953906001600160a01b03163383611877565b95945050505050565b6002546001600160a01b031633146109865760405162461bcd60e51b81526004016104db90611f4b565b6002546001600160a01b031633146109b05760405162461bcd60e51b81526004016104db90611e9b565b60005b81518110156107325760008282815181106109de57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610a119190611d61565b60206040518083038186803b158015610a2957600080fd5b505afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a619190611c9c565b9050610a95838381518110610a8657634e487b7160e01b600052603260045260246000fd5b60200260200101513383611877565b6040518190339030907fdd1a0661b3afa263ceb90ee8281d080435497c1df9d5a4720acedc84efd12fe790600090a45080610acf81612112565b9150506109b3565b60008080610aea6401000000004261212d565b905060005b33600090815260056020526040902054811015610c1957336000908152600560205260408120805483908110610b3557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905080600001518363ffffffff1610158015610baf575080602001518363ffffffff16105b15610c06576000610bd560035461062384600001518763ffffffff1661060691906120cb565b9050610c0285610bfc8361065260056106236004896040015161184090919063ffffffff16565b9061186b565b9450505b5080610c1181612112565b915050610aef565b509091505090565b6000808080808080610c386401000000004261212d565b905060005b33600090815260056020526040902054811015610de257336000908152600560205260408120805483908110610c8357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050610cf181604001518761186b90919063ffffffff16565b815190965063ffffffff841610801590610d14575080602001518363ffffffff16105b15610d8a576000610d3a60035461062384600001518763ffffffff1661060691906120cb565b9050610d5f85610bfc8460a0015161065286606001518661185f90919063ffffffff16565b9450610d8686610bfc8361065260056106236004896040015161184090919063ffffffff16565b9550505b80602001518363ffffffff1610610dcf57610dcc84610bfc8360a001516106528560600151610652600561062360048a6040015161184090919063ffffffff16565b93505b5080610dda81612112565b915050610c3d565b5092969195509350915050565b6009546001600160a01b031681565b6000806000610e0c84610736565b600a546040516332854c1360e01b8152919250600091829182916001600160a01b03909116906332854c1390610e46908a90600401611d61565b60206040518083038186803b158015610e5e57600080fd5b505afa158015610e72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e969190611c9c565b905080610ea65760039150600592505b8060011415610eb85760059150600a92505b8060021415610eca5760069150600a92505b8060031415610edc5760079150600f92505b8060041415610eee5760089150600f92505b60015b82811015610f3b576001600160a01b0388166000908152600d60209081526040808320848452909152902054610f279086612080565b945080610f3381612112565b915050610ef1565b5083610f4d6103e86106238387611840565b9550955050505050915091565b6002546001600160a01b03163314610f845760405162461bcd60e51b81526004016104db90611f4b565b6002546001600160a01b03163314610fae5760405162461bcd60e51b81526004016104db90611f4b565b6002546040516001600160a01b038084169216907f38b1065e0d088f6eda3cb9f0efc7bbb9b145907ab0deb0dbfb700d2bb21599e990600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b60085481565b60035481565b600c602052816000526040600020818154811061103257600080fd5b600091825260209091206002909102018054600190910154909250905082565b60075481565b600b6020526000908152604090205460ff1681565b6001546001600160a01b031681565b6002546001600160a01b031633146110a65760405162461bcd60e51b81526004016104db90611f4b565b600755565b600f5481565b600a546001600160a01b031681565b6002546001600160a01b031633146110ea5760405162461bcd60e51b81526004016104db90611f4b565b6002546001600160a01b031633146111145760405162461bcd60e51b81526004016104db90611f4b565b6003546040518291907f330ab878145b7defb2c3a805cb0958be15256ca947060a42e7c08a0faa0f22f590600090a3600355565b8115806111555750816003145b806111605750816006145b8061116b575081600c145b806111765750816018145b806111815750816024145b61119d5760405162461bcd60e51b81526004016104db90611ef3565b600154604051634ce3696f60e11b81526001600160a01b03909116906399c6d2de906111d190339086908690600401611df4565b600060405180830381600087803b1580156111eb57600080fd5b505af11580156111ff573d6000803e3d6000fd5b505060405183925084915033907fd6b6177d76c249d38ccb3b9e158a75b9864fd5dcc8d8d499708767ef6ca801f790600090a4505050565b6005602052816000526040600020818154811061125357600080fd5b600091825260209091206006909102018054600182015460028301546003840154600485015460059095015493965091945092909186565b600d60209081526000928352604080842090915290825290205481565b600e5481565b6002546001600160a01b031633146112d85760405162461bcd60e51b81526004016104db90611f4b565b60105460ff16156112fb5760405162461bcd60e51b81526004016104db90611e20565b60005b815181101561073257600b600083838151811061132b57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166113bc576001600b600084848151811061137c57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b806113c681612112565b9150506112fe565b60006113ea60646106296007548861185390919063ffffffff16565b90506000859050600080606460065469021e19e0c9bab240000061140e91906120ac565b6114189190612098565b60078054919250600091908261142d83612112565b909155506007546001600160a01b038a166000908152600b60205260409020549192509060ff1615156001146114755760405162461bcd60e51b81526004016104db90611ec6565b6001600160a01b03891661149b5760405162461bcd60e51b81526004016104db90611e72565b8715806114aa57508760075411155b6114c65760405162461bcd60e51b81526004016104db90611fba565b68056bc75e2d631000008610156114ef5760405162461bcd60e51b81526004016104db90611f20565b6114fb8933308d611964565b60005461151c906001600160a01b031633611517896005611853565b611877565b61153361152a876005611853565b600f549061186b565b600f55600e54611543908761186b565b600e55604080518082019091526000908061155f896005611853565b8152602001889052600854909150611577908861185f565b600881905587101561159457600854611590908861185f565b6008555b8660085410156115d9576008546115ac90889061186b565b6115c0906969e10de76676d08000006120cb565b600855600780549060006115d383612112565b91905055505b866008541415611607576969e10de76676d08000006008556007805490600061160183612112565b91905055505b33600090815260046020526040902054611621908861186b565b33600081815260046020908152604080832094909455600c81528382208054600181810183559184529282902086516002909402019283559085015191015590516001600160a01b038c169189918e917f0caedce831599172dfe59db540c9743cf217772cbeb82b67f7cc1ff68039a8969161169d9190611d61565b60405180910390a45050505050505050505050565b600080806116c56401000000004261212d565b905060005b33600090815260056020526040902054811015610c195733600090815260056020526040812080548390811061171057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905080600001518363ffffffff161015801561178a575080602001518363ffffffff16105b156117d95760006117b060035461062384600001518763ffffffff1661060691906120cb565b90506117d585610bfc8460a0015161065286606001518661185f90919063ffffffff16565b9450505b80602001518363ffffffff161061181e5761181b84610bfc8360a001516106528560600151610652600561062360048a6040015161184090919063ffffffff16565b93505b508061182981612112565b9150506116ca565b6002546001600160a01b031681565b600061184c82846120ac565b9392505050565b600061184c8284612098565b600061184c82846120cb565b600061184c8284612080565b600080846001600160a01b031663a9059cbb858560405160240161189c929190611ddb565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516118d59190611d45565b6000604051808303816000865af19150503d8060008114611912576040519150601f19603f3d011682016040523d82523d6000602084013e611917565b606091505b50915091508180156119415750805115806119415750808060200190518101906119419190611c2d565b61195d5760405162461bcd60e51b81526004016104db90611e3b565b5050505050565b600080856001600160a01b03166323b872dd86868660405160240161198b93929190611d75565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516119c49190611d45565b6000604051808303816000865af19150503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b5091509150818015611a30575080511580611a30575080806020019051810190611a309190611c2d565b611a4c5760405162461bcd60e51b81526004016104db90611f76565b505050505050565b80356001600160a01b03811681146104a657600080fd5b600082601f830112611a7b578081fd5b813567ffffffffffffffff811115611a9557611a9561216d565b611aa8601f8201601f1916602001612056565b818152846020838601011115611abc578283fd5b816020850160208301379081016020019190915292915050565b805167ffffffffffffffff811681146104a657600080fd5b600060208284031215611aff578081fd5b61184c82611a54565b60008060408385031215611b1a578081fd5b611b2383611a54565b946020939093013593505050565b600080600060608486031215611b45578081fd5b611b4e84611a54565b95602085013595506040909401359392505050565b60006020808385031215611b75578182fd5b823567ffffffffffffffff80821115611b8c578384fd5b818501915085601f830112611b9f578384fd5b813581811115611bb157611bb161216d565b8381029150611bc1848301612056565b8181528481019084860184860187018a1015611bdb578788fd5b8795505b83861015611c0457611bf081611a54565b835260019590950194918601918601611bdf565b5098975050505050505050565b600060208284031215611c22578081fd5b813561184c81612183565b600060208284031215611c3e578081fd5b815161184c81612183565b600060208284031215611c5a578081fd5b813567ffffffffffffffff811115611c70578182fd5b611c7c84828501611a6b565b949350505050565b600060208284031215611c95578081fd5b5035919050565b600060208284031215611cad578081fd5b5051919050565b60008060008060808587031215611cc9578081fd5b84359350611cd960208601611a54565b925060408501359150606085013567ffffffffffffffff811115611cfb578182fd5b611d0787828801611a6b565b91505092959194509250565b60008060408385031215611d25578182fd5b611d2e83611ad6565b9150611d3c60208401611ad6565b90509250929050565b60008251611d578184602087016120e2565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060018060a01b0384168252604060208301528251806040840152611dc68160608501602087016120e2565b601f01601f1916919091016060019392505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b901515815260200190565b6020808252600190820152600360fc1b604082015260600190565b6020808252601f908201527f5472616e7366657248656c7065723a205452414e534645525f4641494c454400604082015260600190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b6020808252601190820152702cb7ba9030b932903737ba1030b236b4b760791b604082015260600190565b60208082526013908201527274686520746f6b656e206e6f7420616c6c6f7760681b604082015260600190565b6020808252601390820152722232b837b9b4ba1036b7b73a341032b93937b960691b604082015260600190565b60208082526011908201527004974277320626967207468616e2031303607c1b604082015260600190565b6020808252601190820152703cb7ba9030b932903737ba1030b236b4b760791b604082015260600190565b60208082526024908201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416040820152631253115160e21b606082015260800190565b6020808252601290820152714d6f7265207468616e20736c69707061676560701b604082015260600190565b90815260200190565b918252602082015260400190565b9283526020830191909152604082015260600190565b958652602086019490945260408501929092526060840152608083015260a082015260c00190565b67ffffffffffffffff92831681529116602082015260400190565b60405181810167ffffffffffffffff811182821017156120785761207861216d565b604052919050565b6000821982111561209357612093612141565b500190565b6000826120a7576120a7612157565b500490565b60008160001904831182151516156120c6576120c6612141565b500290565b6000828210156120dd576120dd612141565b500390565b60005b838110156120fd5781810151838201526020016120e5565b8381111561210c576000848401525b50505050565b600060001982141561212657612126612141565b5060010190565b60008261213c5761213c612157565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461219157600080fd5b5056fea2646970667358221220dee9d04611c7407fa1df933384f244467c30d65fc9d3c0fa4ba5d8b2a410d91f64736f6c63430008000033a26469706673582212206c0caf79b5a580a54ff7ad3cbb0ef3e15b42263a68816b2ed9bd6d8749f6dbbb64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2119:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:17",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:17"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:17"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:17",
                "type": ""
              }
            ],
            "src": "14:175:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:17"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:17"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:17",
                "type": ""
              }
            ],
            "src": "194:198:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:17"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:17"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:17",
                "type": ""
              }
            ],
            "src": "397:274:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "777:102:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "787:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "799:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "810:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "795:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "795:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "787:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "829:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "844:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "860:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "865:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "856:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "856:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "869:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "852:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "852:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "840:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "840:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "822:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "822:51:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "746:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "757:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "768:4:17",
                "type": ""
              }
            ],
            "src": "676:203:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1069:280:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1079:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1091:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1087:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1087:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1079:4:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1115:29:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1133:3:17",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1138:1:17",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1129:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1129:11:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1142:1:17",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1125:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:19:17"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1119:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1160:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1175:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1183:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1153:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1153:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1153:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1207:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1218:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1203:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1203:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1227:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1235:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1223:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1223:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1196:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1196:43:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1196:43:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1259:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1270:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1255:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1255:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1279:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1287:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1275:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1248:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1248:43:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1248:43:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1311:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1322:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1307:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1307:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "1331:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1339:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1327:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1327:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1300:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1300:43:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1300:43:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1014:9:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1025:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1033:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1041:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1049:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1060:4:17",
                "type": ""
              }
            ],
            "src": "884:465:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1528:228:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1545:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1556:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1538:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1538:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1538:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1579:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1590:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1575:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1575:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1595:2:17",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1568:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1568:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1568:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1618:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1629:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1614:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1614:18:17"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1634:34:17",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1607:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1607:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1607:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1689:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1700:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1685:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1685:18:17"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1705:8:17",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1678:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1678:36:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1723:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1735:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1746:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1731:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1731:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1723:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1505:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1519:4:17",
                "type": ""
              }
            ],
            "src": "1354:402:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1935:182:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1952:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1963:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1945:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1945:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1945:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1986:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1997:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1982:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1982:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2002:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1975:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1975:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1975:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2025:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2036:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2021:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:18:17"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2041:34:17",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2014:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2014:62:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2085:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2097:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2108:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2093:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2093:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2085:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1912:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1926:4:17",
                "type": ""
              }
            ],
            "src": "1761:356:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "120:346:10:-:0;;;;;;;;;;;;-1:-1:-1;867:23:13;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;120:346:10;;587:96:15;666:10;587:96;:::o;2041:169:13:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:13;;;-1:-1:-1;;;;;;2131:17:13;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;120:346:10:-;;;;;;;",
  "deployedSourceMap": "120:346:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:92:13;;;:::i;:::-;;973:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;171:33:10;;;:::i;213:250::-;;;;;;:::i;:::-;;:::i;1846:189:13:-;;;;;;:::i;:::-;;:::i;1605:92::-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:13;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:13;;1177:68;;;;-1:-1:-1;;;1177:68:13;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:13;973:85;:::o;171:33:10:-;;;-1:-1:-1;;;;;171:33:10;;:::o;213:250::-;314:19;1196:12:13;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:13;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:13;;1177:68;;;;-1:-1:-1;;;1177:68:13;;;;;;;:::i;:::-;410:3:10::1;422:1;426:3;431:10;394:48;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;351:18:10::1;:104:::0;;-1:-1:-1;;;;;;351:104:10::1;-1:-1:-1::0;;;;;351:104:10;;;::::1;::::0;;;::::1;::::0;;213:250;;-1:-1:-1;;213:250:10:o;1846:189:13:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:13;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:13;;1177:68;;;;-1:-1:-1;;;1177:68:13;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:13;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:13::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;587:96:15:-;666:10;587:96;:::o;2041:169:13:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:13;;;-1:-1:-1;;;;;;2131:17:13;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:175:17:-;84:20;;-1:-1:-1;;;;;133:31:17;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:17:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:203::-;-1:-1:-1;;;;;840:32:17;;;;822:51;;810:2;795:18;;777:102::o;884:465::-;-1:-1:-1;;;;;1171:15:17;;;1153:34;;1223:15;;;1218:2;1203:18;;1196:43;1275:15;;;1270:2;1255:18;;1248:43;1327:15;;;1322:2;1307:18;;1300:43;1102:3;1087:19;;1069:280::o;1354:402::-;1556:2;1538:21;;;1595:2;1575:18;;;1568:30;1634:34;1629:2;1614:18;;1607:62;-1:-1:-1;;;1700:2:17;1685:18;;1678:36;1746:3;1731:19;;1528:228::o;1761:356::-;1963:2;1945:21;;;1982:18;;;1975:30;2041:34;2036:2;2021:18;;2014:62;2108:2;2093:18;;1935:182::o",
  "source": "pragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../mining/RbConsensus.sol\";\r\n\r\ncontract RbConsensusOrchestrator is Ownable {\r\n    address public rbConsersusAddress;\r\n\r\n    function init(\r\n        address RBT,\r\n        address VIP\r\n    ) public\r\n    onlyOwner\r\n    returns (address rbConsersus)\r\n    {\r\n        rbConsersusAddress = address(\r\n            new RbConsensus(RBT,address(0), VIP, msg.sender)\r\n\r\n        );\r\n    }\r\n}",
  "sourcePath": "D:/公司项目/rainbow/RainbowDao-protocol/contracts/orchestrator/RbConsensusOrchestrator.sol",
  "ast": {
    "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/orchestrator/RbConsensusOrchestrator.sol",
    "exportedSymbols": {
      "Context": [
        2213
      ],
      "IERC20": [
        2191
      ],
      "IOpenOracle": [
        205
      ],
      "IRbBank": [
        191
      ],
      "IRbtVip": [
        158
      ],
      "MiningBase": [
        1308
      ],
      "Ownable": [
        2113
      ],
      "RbConsensus": [
        1962
      ],
      "RbConsensusOrchestrator": [
        2005
      ],
      "SafeMath": [
        2525
      ],
      "TransferHelper": [
        365
      ],
      "userVipStruct": [
        393
      ]
    },
    "id": 2006,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1968,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1969,
        "nodeType": "ImportDirective",
        "scope": 2006,
        "sourceUnit": 2114,
        "src": "27:52:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/mining/RbConsensus.sol",
        "file": "../mining/RbConsensus.sol",
        "id": 1970,
        "nodeType": "ImportDirective",
        "scope": 2006,
        "sourceUnit": 1963,
        "src": "81:35:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1971,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2113,
              "src": "156:7:10"
            },
            "id": 1972,
            "nodeType": "InheritanceSpecifier",
            "src": "156:7:10"
          }
        ],
        "contractDependencies": [
          1962,
          2113,
          2213
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2005,
        "linearizedBaseContracts": [
          2005,
          2113,
          2213
        ],
        "name": "RbConsensusOrchestrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c35a95e3",
            "id": 1974,
            "mutability": "mutable",
            "name": "rbConsersusAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2005,
            "src": "171:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1973,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "171:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2003,
              "nodeType": "Block",
              "src": "340:123:10",
              "statements": [
                {
                  "expression": {
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1985,
                      "name": "rbConsersusAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1974,
                      "src": "351:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1991,
                              "name": "RBT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1976,
                              "src": "410:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1994,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "422:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "414:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1992,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "414:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "414:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1996,
                              "name": "VIP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1978,
                              "src": "426:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1997,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "431:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "431:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "394:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_RbConsensus_$1962_$",
                              "typeString": "function (address,address,address,address) returns (contract RbConsensus)"
                            },
                            "typeName": {
                              "id": 1989,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1988,
                                "name": "RbConsensus",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1962,
                                "src": "398:11:10"
                              },
                              "referencedDeclaration": 1962,
                              "src": "398:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RbConsensus_$1962",
                                "typeString": "contract RbConsensus"
                              }
                            }
                          },
                          "id": 1999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "394:48:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RbConsensus_$1962",
                            "typeString": "contract RbConsensus"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RbConsensus_$1962",
                            "typeString": "contract RbConsensus"
                          }
                        ],
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "372:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1986,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "372:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "372:83:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "351:104:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "351:104:10"
                }
              ]
            },
            "functionSelector": "f09a4016",
            "id": 2004,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1981,
                "modifierName": {
                  "id": 1980,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2056,
                  "src": "290:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "290:9:10"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "RBT",
                  "nodeType": "VariableDeclaration",
                  "scope": 2004,
                  "src": "237:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1978,
                  "mutability": "mutable",
                  "name": "VIP",
                  "nodeType": "VariableDeclaration",
                  "scope": 2004,
                  "src": "259:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "226:51:10"
            },
            "returnParameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "rbConsersus",
                  "nodeType": "VariableDeclaration",
                  "scope": 2004,
                  "src": "314:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "313:21:10"
            },
            "scope": 2005,
            "src": "213:250:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2006,
        "src": "120:346:10"
      }
    ],
    "src": "0:466:10"
  },
  "legacyAST": {
    "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/orchestrator/RbConsensusOrchestrator.sol",
    "exportedSymbols": {
      "Context": [
        2213
      ],
      "IERC20": [
        2191
      ],
      "IOpenOracle": [
        205
      ],
      "IRbBank": [
        191
      ],
      "IRbtVip": [
        158
      ],
      "MiningBase": [
        1308
      ],
      "Ownable": [
        2113
      ],
      "RbConsensus": [
        1962
      ],
      "RbConsensusOrchestrator": [
        2005
      ],
      "SafeMath": [
        2525
      ],
      "TransferHelper": [
        365
      ],
      "userVipStruct": [
        393
      ]
    },
    "id": 2006,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1968,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1969,
        "nodeType": "ImportDirective",
        "scope": 2006,
        "sourceUnit": 2114,
        "src": "27:52:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/公司项目/rainbow/RainbowDao-protocol/contracts/mining/RbConsensus.sol",
        "file": "../mining/RbConsensus.sol",
        "id": 1970,
        "nodeType": "ImportDirective",
        "scope": 2006,
        "sourceUnit": 1963,
        "src": "81:35:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1971,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2113,
              "src": "156:7:10"
            },
            "id": 1972,
            "nodeType": "InheritanceSpecifier",
            "src": "156:7:10"
          }
        ],
        "contractDependencies": [
          1962,
          2113,
          2213
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2005,
        "linearizedBaseContracts": [
          2005,
          2113,
          2213
        ],
        "name": "RbConsensusOrchestrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c35a95e3",
            "id": 1974,
            "mutability": "mutable",
            "name": "rbConsersusAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2005,
            "src": "171:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1973,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "171:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2003,
              "nodeType": "Block",
              "src": "340:123:10",
              "statements": [
                {
                  "expression": {
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1985,
                      "name": "rbConsersusAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1974,
                      "src": "351:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1991,
                              "name": "RBT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1976,
                              "src": "410:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1994,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "422:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "414:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1992,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "414:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "414:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1996,
                              "name": "VIP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1978,
                              "src": "426:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1997,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "431:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "431:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "394:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_RbConsensus_$1962_$",
                              "typeString": "function (address,address,address,address) returns (contract RbConsensus)"
                            },
                            "typeName": {
                              "id": 1989,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1988,
                                "name": "RbConsensus",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1962,
                                "src": "398:11:10"
                              },
                              "referencedDeclaration": 1962,
                              "src": "398:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RbConsensus_$1962",
                                "typeString": "contract RbConsensus"
                              }
                            }
                          },
                          "id": 1999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "394:48:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RbConsensus_$1962",
                            "typeString": "contract RbConsensus"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RbConsensus_$1962",
                            "typeString": "contract RbConsensus"
                          }
                        ],
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "372:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1986,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "372:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "372:83:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "351:104:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "351:104:10"
                }
              ]
            },
            "functionSelector": "f09a4016",
            "id": 2004,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1981,
                "modifierName": {
                  "id": 1980,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2056,
                  "src": "290:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "290:9:10"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "RBT",
                  "nodeType": "VariableDeclaration",
                  "scope": 2004,
                  "src": "237:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1978,
                  "mutability": "mutable",
                  "name": "VIP",
                  "nodeType": "VariableDeclaration",
                  "scope": 2004,
                  "src": "259:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "226:51:10"
            },
            "returnParameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "rbConsersus",
                  "nodeType": "VariableDeclaration",
                  "scope": 2004,
                  "src": "314:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "313:21:10"
            },
            "scope": 2005,
            "src": "213:250:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2006,
        "src": "120:346:10"
      }
    ],
    "src": "0:466:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1234": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8Ca0Fbad2E8dCb6fFA35F1fD05E0FC5D473718A1",
      "transactionHash": "0xfab5bd0856437fcf92f56e5b52273d1d920bdcac9e58c926dcac348730fcf606"
    },
    "1634354924792": {
      "events": {},
      "links": {},
      "address": "0x74851b1cfdc7C0a9e88A9F08753dD502E66c0C1D",
      "transactionHash": "0x6d3ce560f6b1c475ceca17c3bd6de7a67ed96f08af639d879f1eb94b3c942687"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-10-16T03:51:57.593Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}